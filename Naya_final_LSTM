{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b8a0c5b5",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-03-29T08:50:49.277946Z",
     "iopub.status.busy": "2025-03-29T08:50:49.277330Z",
     "iopub.status.idle": "2025-03-29T08:50:50.522162Z",
     "shell.execute_reply": "2025-03-29T08:50:50.520852Z"
    },
    "papermill": {
     "duration": 1.253208,
     "end_time": "2025-03-29T08:50:50.524095",
     "exception": false,
     "start_time": "2025-03-29T08:50:49.270887",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/motionsense-dataset/data_subjects_info.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/__MACOSX/A_DeviceMotion_data/dws_1/._sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/__MACOSX/A_DeviceMotion_data/jog_9/._sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/__MACOSX/A_DeviceMotion_data/jog_9/._sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/__MACOSX/A_DeviceMotion_data/wlk_7/._sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_7.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "64c4ab3a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T08:50:50.536659Z",
     "iopub.status.busy": "2025-03-29T08:50:50.536106Z",
     "iopub.status.idle": "2025-03-29T08:50:52.318037Z",
     "shell.execute_reply": "2025-03-29T08:50:52.316882Z"
    },
    "papermill": {
     "duration": 1.790212,
     "end_time": "2025-03-29T08:50:52.319957",
     "exception": false,
     "start_time": "2025-03-29T08:50:50.529745",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "sns.set_theme(style=\"ticks\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "afe087ad",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T08:50:52.332072Z",
     "iopub.status.busy": "2025-03-29T08:50:52.331424Z",
     "iopub.status.idle": "2025-03-29T08:50:52.676121Z",
     "shell.execute_reply": "2025-03-29T08:50:52.674868Z"
    },
    "papermill": {
     "duration": 0.35276,
     "end_time": "2025-03-29T08:50:52.678158",
     "exception": false,
     "start_time": "2025-03-29T08:50:52.325398",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "17679656",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T08:50:52.690522Z",
     "iopub.status.busy": "2025-03-29T08:50:52.690135Z",
     "iopub.status.idle": "2025-03-29T08:50:57.032167Z",
     "shell.execute_reply": "2025-03-29T08:50:57.031162Z"
    },
    "papermill": {
     "duration": 4.350383,
     "end_time": "2025-03-29T08:50:57.034062",
     "exception": false,
     "start_time": "2025-03-29T08:50:52.683679",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import torch\n",
    "import torch.optim as optim\n",
    "import torch.nn as nn\n",
    "from torch.utils.data import TensorDataset, DataLoader"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "9513131f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T08:50:57.046845Z",
     "iopub.status.busy": "2025-03-29T08:50:57.046231Z",
     "iopub.status.idle": "2025-03-29T08:51:21.798558Z",
     "shell.execute_reply": "2025-03-29T08:51:21.797285Z"
    },
    "papermill": {
     "duration": 24.761345,
     "end_time": "2025-03-29T08:51:21.801024",
     "exception": false,
     "start_time": "2025-03-29T08:50:57.039679",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# change these following three lines only\n",
    "subject_data_file = 'data_subjects_info.csv'\n",
    "data_dir = '/kaggle/input/motionsense-dataset/A_DeviceMotion_data'\n",
    "\n",
    "os.chdir(data_dir)\n",
    "os.chdir(os.pardir)\n",
    "\n",
    "def get_all_dataset_paths(input_dir) -> []:\n",
    "    input_files = []\n",
    "    for dirs, subdirs, files in os.walk(input_dir):\n",
    "        for file in files:\n",
    "            if file.endswith('.csv'):\n",
    "                input_files.append(os.path.join(dirs, file))\n",
    "    return input_files\n",
    "\n",
    "def load_whole_dataframe_from_paths(paths, meta) -> pd.DataFrame:\n",
    "    \n",
    "    df = pd.DataFrame()\n",
    "\n",
    "    for p in paths:\n",
    "        c_dir, c_file = p.split('/')[-2], p.split('/')[-1]\n",
    "        c_cat, c_ses = c_dir.split('_')[-2], c_dir.split('_')[-1]\n",
    "        c_sub = c_file.split('_')[-1].split('.')[-2]\n",
    "        \n",
    "        tdf = pd.read_csv(p, encoding = \"utf-8\")\n",
    "        tdf = tdf.assign(person_id = int(c_sub))\n",
    "        tdf = tdf.assign(trial_id = int(c_ses))\n",
    "        tdf = tdf.assign(activity = str(c_cat))\n",
    "        tdf = tdf.assign(age = int(meta.age[int(c_sub) - 1]))\n",
    "        tdf = tdf.assign(gender = int(meta.gender[int(c_sub) - 1]))\n",
    "        tdf = tdf.assign(height = int(meta.height[int(c_sub) - 1]))\n",
    "        tdf = tdf.assign(weight = int(meta.weight[int(c_sub) - 1]))\n",
    "\n",
    "        df = pd.concat([df, tdf])\n",
    "    \n",
    "    df.reset_index(drop=True, inplace=True)\n",
    "    return df\n",
    "\n",
    "subject_data_frame = pd.DataFrame(pd.read_csv(subject_data_file, encoding = \"utf-8\"))\n",
    "all_dataset_paths = get_all_dataset_paths(data_dir)\n",
    "data_frame = load_whole_dataframe_from_paths(all_dataset_paths, subject_data_frame)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e97bffcf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T08:51:21.813395Z",
     "iopub.status.busy": "2025-03-29T08:51:21.813041Z",
     "iopub.status.idle": "2025-03-29T08:51:21.836430Z",
     "shell.execute_reply": "2025-03-29T08:51:21.835160Z"
    },
    "papermill": {
     "duration": 0.032155,
     "end_time": "2025-03-29T08:51:21.838751",
     "exception": false,
     "start_time": "2025-03-29T08:51:21.806596",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>code</th>\n",
       "      <th>weight</th>\n",
       "      <th>height</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>102</td>\n",
       "      <td>188</td>\n",
       "      <td>46</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>72</td>\n",
       "      <td>180</td>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>48</td>\n",
       "      <td>161</td>\n",
       "      <td>28</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>90</td>\n",
       "      <td>176</td>\n",
       "      <td>31</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>48</td>\n",
       "      <td>164</td>\n",
       "      <td>23</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>76</td>\n",
       "      <td>180</td>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>62</td>\n",
       "      <td>175</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>52</td>\n",
       "      <td>161</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>93</td>\n",
       "      <td>190</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>72</td>\n",
       "      <td>164</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>11</td>\n",
       "      <td>70</td>\n",
       "      <td>178</td>\n",
       "      <td>24</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12</td>\n",
       "      <td>60</td>\n",
       "      <td>167</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>13</td>\n",
       "      <td>60</td>\n",
       "      <td>178</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>14</td>\n",
       "      <td>70</td>\n",
       "      <td>180</td>\n",
       "      <td>35</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>15</td>\n",
       "      <td>70</td>\n",
       "      <td>185</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>16</td>\n",
       "      <td>96</td>\n",
       "      <td>172</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>17</td>\n",
       "      <td>76</td>\n",
       "      <td>180</td>\n",
       "      <td>26</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>18</td>\n",
       "      <td>54</td>\n",
       "      <td>164</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>19</td>\n",
       "      <td>78</td>\n",
       "      <td>164</td>\n",
       "      <td>28</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>20</td>\n",
       "      <td>88</td>\n",
       "      <td>180</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>21</td>\n",
       "      <td>52</td>\n",
       "      <td>165</td>\n",
       "      <td>24</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>22</td>\n",
       "      <td>100</td>\n",
       "      <td>186</td>\n",
       "      <td>31</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>23</td>\n",
       "      <td>68</td>\n",
       "      <td>170</td>\n",
       "      <td>25</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>24</td>\n",
       "      <td>74</td>\n",
       "      <td>173</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    code  weight  height  age  gender\n",
       "0      1     102     188   46       1\n",
       "1      2      72     180   28       1\n",
       "2      3      48     161   28       0\n",
       "3      4      90     176   31       1\n",
       "4      5      48     164   23       0\n",
       "5      6      76     180   28       1\n",
       "6      7      62     175   30       0\n",
       "7      8      52     161   24       0\n",
       "8      9      93     190   32       1\n",
       "9     10      72     164   31       0\n",
       "10    11      70     178   24       1\n",
       "11    12      60     167   33       1\n",
       "12    13      60     178   33       1\n",
       "13    14      70     180   35       1\n",
       "14    15      70     185   33       1\n",
       "15    16      96     172   29       0\n",
       "16    17      76     180   26       1\n",
       "17    18      54     164   26       0\n",
       "18    19      78     164   28       0\n",
       "19    20      88     180   25       1\n",
       "20    21      52     165   24       1\n",
       "21    22     100     186   31       1\n",
       "22    23      68     170   25       0\n",
       "23    24      74     173   18       0"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "subject_data_frame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "5e2a0840",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T08:51:21.852180Z",
     "iopub.status.busy": "2025-03-29T08:51:21.851817Z",
     "iopub.status.idle": "2025-03-29T08:51:21.878378Z",
     "shell.execute_reply": "2025-03-29T08:51:21.877128Z"
    },
    "papermill": {
     "duration": 0.034993,
     "end_time": "2025-03-29T08:51:21.880121",
     "exception": false,
     "start_time": "2025-03-29T08:51:21.845128",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>person_id</th>\n",
       "      <th>trial_id</th>\n",
       "      <th>activity</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>attitude.roll</th>\n",
       "      <th>attitude.pitch</th>\n",
       "      <th>attitude.yaw</th>\n",
       "      <th>gravity.x</th>\n",
       "      <th>gravity.y</th>\n",
       "      <th>gravity.z</th>\n",
       "      <th>rotationRate.x</th>\n",
       "      <th>rotationRate.y</th>\n",
       "      <th>rotationRate.z</th>\n",
       "      <th>userAcceleration.x</th>\n",
       "      <th>userAcceleration.y</th>\n",
       "      <th>userAcceleration.z</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>dws</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>96</td>\n",
       "      <td>1.044129</td>\n",
       "      <td>-1.364544</td>\n",
       "      <td>-0.762006</td>\n",
       "      <td>0.177020</td>\n",
       "      <td>0.978805</td>\n",
       "      <td>-0.102928</td>\n",
       "      <td>-0.055552</td>\n",
       "      <td>0.296486</td>\n",
       "      <td>-0.517680</td>\n",
       "      <td>0.277799</td>\n",
       "      <td>0.073975</td>\n",
       "      <td>-0.005989</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>dws</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>96</td>\n",
       "      <td>1.033699</td>\n",
       "      <td>-1.374970</td>\n",
       "      <td>-0.777007</td>\n",
       "      <td>0.167157</td>\n",
       "      <td>0.980887</td>\n",
       "      <td>-0.099540</td>\n",
       "      <td>-0.160723</td>\n",
       "      <td>0.148822</td>\n",
       "      <td>-0.528907</td>\n",
       "      <td>0.209674</td>\n",
       "      <td>-0.051886</td>\n",
       "      <td>0.032646</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>dws</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>96</td>\n",
       "      <td>1.020201</td>\n",
       "      <td>-1.385414</td>\n",
       "      <td>-0.792103</td>\n",
       "      <td>0.157058</td>\n",
       "      <td>0.982866</td>\n",
       "      <td>-0.096422</td>\n",
       "      <td>-0.125106</td>\n",
       "      <td>0.032462</td>\n",
       "      <td>-0.498599</td>\n",
       "      <td>0.164369</td>\n",
       "      <td>-0.157625</td>\n",
       "      <td>0.108598</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>dws</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>96</td>\n",
       "      <td>0.991317</td>\n",
       "      <td>-1.392669</td>\n",
       "      <td>-0.820281</td>\n",
       "      <td>0.148236</td>\n",
       "      <td>0.984177</td>\n",
       "      <td>-0.097010</td>\n",
       "      <td>0.135182</td>\n",
       "      <td>-0.113719</td>\n",
       "      <td>-0.398317</td>\n",
       "      <td>0.138705</td>\n",
       "      <td>-0.194550</td>\n",
       "      <td>0.106623</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>dws</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>96</td>\n",
       "      <td>0.938219</td>\n",
       "      <td>-1.393323</td>\n",
       "      <td>-0.871891</td>\n",
       "      <td>0.142361</td>\n",
       "      <td>0.984293</td>\n",
       "      <td>-0.104360</td>\n",
       "      <td>0.475710</td>\n",
       "      <td>-0.107196</td>\n",
       "      <td>-0.194053</td>\n",
       "      <td>0.141697</td>\n",
       "      <td>-0.141046</td>\n",
       "      <td>0.052633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412860</th>\n",
       "      <td>6859</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>wlk</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>175</td>\n",
       "      <td>62</td>\n",
       "      <td>-0.023793</td>\n",
       "      <td>-0.999631</td>\n",
       "      <td>-0.784959</td>\n",
       "      <td>-0.012861</td>\n",
       "      <td>0.841271</td>\n",
       "      <td>-0.540444</td>\n",
       "      <td>0.047839</td>\n",
       "      <td>-0.205053</td>\n",
       "      <td>-0.354167</td>\n",
       "      <td>0.114348</td>\n",
       "      <td>0.727546</td>\n",
       "      <td>0.388558</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412861</th>\n",
       "      <td>6860</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>wlk</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>175</td>\n",
       "      <td>62</td>\n",
       "      <td>-0.043543</td>\n",
       "      <td>-1.004392</td>\n",
       "      <td>-0.804742</td>\n",
       "      <td>-0.023357</td>\n",
       "      <td>0.843836</td>\n",
       "      <td>-0.536076</td>\n",
       "      <td>-0.498880</td>\n",
       "      <td>0.069946</td>\n",
       "      <td>-0.452342</td>\n",
       "      <td>-0.366063</td>\n",
       "      <td>0.680807</td>\n",
       "      <td>0.583729</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412862</th>\n",
       "      <td>6861</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>wlk</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>175</td>\n",
       "      <td>62</td>\n",
       "      <td>-0.040952</td>\n",
       "      <td>-1.016429</td>\n",
       "      <td>-0.808555</td>\n",
       "      <td>-0.021550</td>\n",
       "      <td>0.850234</td>\n",
       "      <td>-0.525946</td>\n",
       "      <td>-0.519771</td>\n",
       "      <td>0.242518</td>\n",
       "      <td>0.098493</td>\n",
       "      <td>-0.240245</td>\n",
       "      <td>0.207811</td>\n",
       "      <td>0.528601</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412863</th>\n",
       "      <td>6862</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>wlk</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>175</td>\n",
       "      <td>62</td>\n",
       "      <td>-0.034956</td>\n",
       "      <td>-1.023650</td>\n",
       "      <td>-0.799503</td>\n",
       "      <td>-0.018182</td>\n",
       "      <td>0.854013</td>\n",
       "      <td>-0.519916</td>\n",
       "      <td>-0.363679</td>\n",
       "      <td>-0.225310</td>\n",
       "      <td>0.272167</td>\n",
       "      <td>-0.199577</td>\n",
       "      <td>-0.125375</td>\n",
       "      <td>0.559192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412864</th>\n",
       "      <td>6863</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>wlk</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>175</td>\n",
       "      <td>62</td>\n",
       "      <td>-0.042453</td>\n",
       "      <td>-1.030629</td>\n",
       "      <td>-0.803795</td>\n",
       "      <td>-0.021826</td>\n",
       "      <td>0.857622</td>\n",
       "      <td>-0.513798</td>\n",
       "      <td>-0.222550</td>\n",
       "      <td>-0.083684</td>\n",
       "      <td>-0.367962</td>\n",
       "      <td>-0.109430</td>\n",
       "      <td>-0.021410</td>\n",
       "      <td>0.744221</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1412865 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Unnamed: 0  person_id  trial_id activity  age  gender  height  weight  \\\n",
       "0                0         16         1      dws   29       0     172      96   \n",
       "1                1         16         1      dws   29       0     172      96   \n",
       "2                2         16         1      dws   29       0     172      96   \n",
       "3                3         16         1      dws   29       0     172      96   \n",
       "4                4         16         1      dws   29       0     172      96   \n",
       "...            ...        ...       ...      ...  ...     ...     ...     ...   \n",
       "1412860       6859          7         7      wlk   30       0     175      62   \n",
       "1412861       6860          7         7      wlk   30       0     175      62   \n",
       "1412862       6861          7         7      wlk   30       0     175      62   \n",
       "1412863       6862          7         7      wlk   30       0     175      62   \n",
       "1412864       6863          7         7      wlk   30       0     175      62   \n",
       "\n",
       "         attitude.roll  attitude.pitch  attitude.yaw  gravity.x  gravity.y  \\\n",
       "0             1.044129       -1.364544     -0.762006   0.177020   0.978805   \n",
       "1             1.033699       -1.374970     -0.777007   0.167157   0.980887   \n",
       "2             1.020201       -1.385414     -0.792103   0.157058   0.982866   \n",
       "3             0.991317       -1.392669     -0.820281   0.148236   0.984177   \n",
       "4             0.938219       -1.393323     -0.871891   0.142361   0.984293   \n",
       "...                ...             ...           ...        ...        ...   \n",
       "1412860      -0.023793       -0.999631     -0.784959  -0.012861   0.841271   \n",
       "1412861      -0.043543       -1.004392     -0.804742  -0.023357   0.843836   \n",
       "1412862      -0.040952       -1.016429     -0.808555  -0.021550   0.850234   \n",
       "1412863      -0.034956       -1.023650     -0.799503  -0.018182   0.854013   \n",
       "1412864      -0.042453       -1.030629     -0.803795  -0.021826   0.857622   \n",
       "\n",
       "         gravity.z  rotationRate.x  rotationRate.y  rotationRate.z  \\\n",
       "0        -0.102928       -0.055552        0.296486       -0.517680   \n",
       "1        -0.099540       -0.160723        0.148822       -0.528907   \n",
       "2        -0.096422       -0.125106        0.032462       -0.498599   \n",
       "3        -0.097010        0.135182       -0.113719       -0.398317   \n",
       "4        -0.104360        0.475710       -0.107196       -0.194053   \n",
       "...            ...             ...             ...             ...   \n",
       "1412860  -0.540444        0.047839       -0.205053       -0.354167   \n",
       "1412861  -0.536076       -0.498880        0.069946       -0.452342   \n",
       "1412862  -0.525946       -0.519771        0.242518        0.098493   \n",
       "1412863  -0.519916       -0.363679       -0.225310        0.272167   \n",
       "1412864  -0.513798       -0.222550       -0.083684       -0.367962   \n",
       "\n",
       "         userAcceleration.x  userAcceleration.y  userAcceleration.z  \n",
       "0                  0.277799            0.073975           -0.005989  \n",
       "1                  0.209674           -0.051886            0.032646  \n",
       "2                  0.164369           -0.157625            0.108598  \n",
       "3                  0.138705           -0.194550            0.106623  \n",
       "4                  0.141697           -0.141046            0.052633  \n",
       "...                     ...                 ...                 ...  \n",
       "1412860            0.114348            0.727546            0.388558  \n",
       "1412861           -0.366063            0.680807            0.583729  \n",
       "1412862           -0.240245            0.207811            0.528601  \n",
       "1412863           -0.199577           -0.125375            0.559192  \n",
       "1412864           -0.109430           -0.021410            0.744221  \n",
       "\n",
       "[1412865 rows x 20 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_frame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ca667a0b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T08:51:21.894076Z",
     "iopub.status.busy": "2025-03-29T08:51:21.893702Z",
     "iopub.status.idle": "2025-03-29T08:51:21.929546Z",
     "shell.execute_reply": "2025-03-29T08:51:21.928565Z"
    },
    "papermill": {
     "duration": 0.045134,
     "end_time": "2025-03-29T08:51:21.931530",
     "exception": false,
     "start_time": "2025-03-29T08:51:21.886396",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "person_id\n",
       "19           71949\n",
       "21           68932\n",
       "16           65417\n",
       "18           62808\n",
       "3            62553\n",
       "2            62339\n",
       "1            62312\n",
       "7            61276\n",
       "8            60727\n",
       "10           59796\n",
       "15           59443\n",
       "11           59292\n",
       "6            57328\n",
       "9            57136\n",
       "14           56487\n",
       "4            56066\n",
       "22           56028\n",
       "17           55539\n",
       "20           55153\n",
       "23           54556\n",
       "12           53293\n",
       "5            52283\n",
       "13           51147\n",
       "24           51005\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_frame.value_counts(['person_id'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "d7a0c70e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T08:51:21.945657Z",
     "iopub.status.busy": "2025-03-29T08:51:21.945264Z",
     "iopub.status.idle": "2025-03-29T08:51:21.975166Z",
     "shell.execute_reply": "2025-03-29T08:51:21.974157Z"
    },
    "papermill": {
     "duration": 0.038809,
     "end_time": "2025-03-29T08:51:21.976874",
     "exception": false,
     "start_time": "2025-03-29T08:51:21.938065",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "trial_id\n",
       "5           234657\n",
       "6           224816\n",
       "7           158645\n",
       "8           120371\n",
       "9           104327\n",
       "13          104121\n",
       "14           81611\n",
       "4            71072\n",
       "15           65272\n",
       "2            59108\n",
       "3            58204\n",
       "1            50246\n",
       "16           29904\n",
       "12           28009\n",
       "11           22502\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_frame.value_counts(['trial_id'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "20a17187",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T08:51:21.991642Z",
     "iopub.status.busy": "2025-03-29T08:51:21.991059Z",
     "iopub.status.idle": "2025-03-29T08:51:22.090179Z",
     "shell.execute_reply": "2025-03-29T08:51:22.088947Z"
    },
    "papermill": {
     "duration": 0.108376,
     "end_time": "2025-03-29T08:51:22.092090",
     "exception": false,
     "start_time": "2025-03-29T08:51:21.983714",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "activity\n",
       "wlk         344288\n",
       "sit         338778\n",
       "std         306427\n",
       "ups         157285\n",
       "jog         134231\n",
       "dws         131856\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_frame.value_counts(['activity'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "c9fc8109",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T08:51:22.106471Z",
     "iopub.status.busy": "2025-03-29T08:51:22.106121Z",
     "iopub.status.idle": "2025-03-29T08:51:22.135392Z",
     "shell.execute_reply": "2025-03-29T08:51:22.134477Z"
    },
    "papermill": {
     "duration": 0.038461,
     "end_time": "2025-03-29T08:51:22.137053",
     "exception": false,
     "start_time": "2025-03-29T08:51:22.098592",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "gender\n",
       "1         810495\n",
       "0         602370\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_frame.value_counts(['gender'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "3caae4fa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T08:51:22.151197Z",
     "iopub.status.busy": "2025-03-29T08:51:22.150849Z",
     "iopub.status.idle": "2025-03-29T08:51:22.155041Z",
     "shell.execute_reply": "2025-03-29T08:51:22.153883Z"
    },
    "papermill": {
     "duration": 0.013646,
     "end_time": "2025-03-29T08:51:22.157150",
     "exception": false,
     "start_time": "2025-03-29T08:51:22.143504",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# all_dataset_paths"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "53a787b1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T08:51:22.171803Z",
     "iopub.status.busy": "2025-03-29T08:51:22.171364Z",
     "iopub.status.idle": "2025-03-29T08:51:22.175932Z",
     "shell.execute_reply": "2025-03-29T08:51:22.174708Z"
    },
    "papermill": {
     "duration": 0.013861,
     "end_time": "2025-03-29T08:51:22.177743",
     "exception": false,
     "start_time": "2025-03-29T08:51:22.163882",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# sns.pairplot(data_frame.sample(100), hue=\"person_id\") # to refactor, too many graphs"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ddfc34ab",
   "metadata": {
    "papermill": {
     "duration": 0.006073,
     "end_time": "2025-03-29T08:51:22.190489",
     "exception": false,
     "start_time": "2025-03-29T08:51:22.184416",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Category activity transferred to numeric value 0 to 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "73e46b4e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T08:51:22.204901Z",
     "iopub.status.busy": "2025-03-29T08:51:22.204446Z",
     "iopub.status.idle": "2025-03-29T08:51:22.577525Z",
     "shell.execute_reply": "2025-03-29T08:51:22.576401Z"
    },
    "papermill": {
     "duration": 0.382515,
     "end_time": "2025-03-29T08:51:22.579566",
     "exception": false,
     "start_time": "2025-03-29T08:51:22.197051",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import LabelEncoder\n",
    "\n",
    "lEncoder = LabelEncoder()\n",
    "labels = lEncoder.fit(data_frame.activity)\n",
    "data_frame['act'] = lEncoder.transform(data_frame.activity)\n",
    "data_frame.drop('activity', axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "6da30bdc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T08:51:22.594093Z",
     "iopub.status.busy": "2025-03-29T08:51:22.593731Z",
     "iopub.status.idle": "2025-03-29T08:51:22.616491Z",
     "shell.execute_reply": "2025-03-29T08:51:22.615392Z"
    },
    "papermill": {
     "duration": 0.032105,
     "end_time": "2025-03-29T08:51:22.618263",
     "exception": false,
     "start_time": "2025-03-29T08:51:22.586158",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>person_id</th>\n",
       "      <th>trial_id</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>attitude.roll</th>\n",
       "      <th>attitude.pitch</th>\n",
       "      <th>attitude.yaw</th>\n",
       "      <th>gravity.x</th>\n",
       "      <th>gravity.y</th>\n",
       "      <th>gravity.z</th>\n",
       "      <th>rotationRate.x</th>\n",
       "      <th>rotationRate.y</th>\n",
       "      <th>rotationRate.z</th>\n",
       "      <th>userAcceleration.x</th>\n",
       "      <th>userAcceleration.y</th>\n",
       "      <th>userAcceleration.z</th>\n",
       "      <th>act</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>96</td>\n",
       "      <td>1.044129</td>\n",
       "      <td>-1.364544</td>\n",
       "      <td>-0.762006</td>\n",
       "      <td>0.177020</td>\n",
       "      <td>0.978805</td>\n",
       "      <td>-0.102928</td>\n",
       "      <td>-0.055552</td>\n",
       "      <td>0.296486</td>\n",
       "      <td>-0.517680</td>\n",
       "      <td>0.277799</td>\n",
       "      <td>0.073975</td>\n",
       "      <td>-0.005989</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>96</td>\n",
       "      <td>1.033699</td>\n",
       "      <td>-1.374970</td>\n",
       "      <td>-0.777007</td>\n",
       "      <td>0.167157</td>\n",
       "      <td>0.980887</td>\n",
       "      <td>-0.099540</td>\n",
       "      <td>-0.160723</td>\n",
       "      <td>0.148822</td>\n",
       "      <td>-0.528907</td>\n",
       "      <td>0.209674</td>\n",
       "      <td>-0.051886</td>\n",
       "      <td>0.032646</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>96</td>\n",
       "      <td>1.020201</td>\n",
       "      <td>-1.385414</td>\n",
       "      <td>-0.792103</td>\n",
       "      <td>0.157058</td>\n",
       "      <td>0.982866</td>\n",
       "      <td>-0.096422</td>\n",
       "      <td>-0.125106</td>\n",
       "      <td>0.032462</td>\n",
       "      <td>-0.498599</td>\n",
       "      <td>0.164369</td>\n",
       "      <td>-0.157625</td>\n",
       "      <td>0.108598</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>96</td>\n",
       "      <td>0.991317</td>\n",
       "      <td>-1.392669</td>\n",
       "      <td>-0.820281</td>\n",
       "      <td>0.148236</td>\n",
       "      <td>0.984177</td>\n",
       "      <td>-0.097010</td>\n",
       "      <td>0.135182</td>\n",
       "      <td>-0.113719</td>\n",
       "      <td>-0.398317</td>\n",
       "      <td>0.138705</td>\n",
       "      <td>-0.194550</td>\n",
       "      <td>0.106623</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>96</td>\n",
       "      <td>0.938219</td>\n",
       "      <td>-1.393323</td>\n",
       "      <td>-0.871891</td>\n",
       "      <td>0.142361</td>\n",
       "      <td>0.984293</td>\n",
       "      <td>-0.104360</td>\n",
       "      <td>0.475710</td>\n",
       "      <td>-0.107196</td>\n",
       "      <td>-0.194053</td>\n",
       "      <td>0.141697</td>\n",
       "      <td>-0.141046</td>\n",
       "      <td>0.052633</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412860</th>\n",
       "      <td>6859</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>175</td>\n",
       "      <td>62</td>\n",
       "      <td>-0.023793</td>\n",
       "      <td>-0.999631</td>\n",
       "      <td>-0.784959</td>\n",
       "      <td>-0.012861</td>\n",
       "      <td>0.841271</td>\n",
       "      <td>-0.540444</td>\n",
       "      <td>0.047839</td>\n",
       "      <td>-0.205053</td>\n",
       "      <td>-0.354167</td>\n",
       "      <td>0.114348</td>\n",
       "      <td>0.727546</td>\n",
       "      <td>0.388558</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412861</th>\n",
       "      <td>6860</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>175</td>\n",
       "      <td>62</td>\n",
       "      <td>-0.043543</td>\n",
       "      <td>-1.004392</td>\n",
       "      <td>-0.804742</td>\n",
       "      <td>-0.023357</td>\n",
       "      <td>0.843836</td>\n",
       "      <td>-0.536076</td>\n",
       "      <td>-0.498880</td>\n",
       "      <td>0.069946</td>\n",
       "      <td>-0.452342</td>\n",
       "      <td>-0.366063</td>\n",
       "      <td>0.680807</td>\n",
       "      <td>0.583729</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412862</th>\n",
       "      <td>6861</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>175</td>\n",
       "      <td>62</td>\n",
       "      <td>-0.040952</td>\n",
       "      <td>-1.016429</td>\n",
       "      <td>-0.808555</td>\n",
       "      <td>-0.021550</td>\n",
       "      <td>0.850234</td>\n",
       "      <td>-0.525946</td>\n",
       "      <td>-0.519771</td>\n",
       "      <td>0.242518</td>\n",
       "      <td>0.098493</td>\n",
       "      <td>-0.240245</td>\n",
       "      <td>0.207811</td>\n",
       "      <td>0.528601</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412863</th>\n",
       "      <td>6862</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>175</td>\n",
       "      <td>62</td>\n",
       "      <td>-0.034956</td>\n",
       "      <td>-1.023650</td>\n",
       "      <td>-0.799503</td>\n",
       "      <td>-0.018182</td>\n",
       "      <td>0.854013</td>\n",
       "      <td>-0.519916</td>\n",
       "      <td>-0.363679</td>\n",
       "      <td>-0.225310</td>\n",
       "      <td>0.272167</td>\n",
       "      <td>-0.199577</td>\n",
       "      <td>-0.125375</td>\n",
       "      <td>0.559192</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412864</th>\n",
       "      <td>6863</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>175</td>\n",
       "      <td>62</td>\n",
       "      <td>-0.042453</td>\n",
       "      <td>-1.030629</td>\n",
       "      <td>-0.803795</td>\n",
       "      <td>-0.021826</td>\n",
       "      <td>0.857622</td>\n",
       "      <td>-0.513798</td>\n",
       "      <td>-0.222550</td>\n",
       "      <td>-0.083684</td>\n",
       "      <td>-0.367962</td>\n",
       "      <td>-0.109430</td>\n",
       "      <td>-0.021410</td>\n",
       "      <td>0.744221</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1412865 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Unnamed: 0  person_id  trial_id  age  gender  height  weight  \\\n",
       "0                0         16         1   29       0     172      96   \n",
       "1                1         16         1   29       0     172      96   \n",
       "2                2         16         1   29       0     172      96   \n",
       "3                3         16         1   29       0     172      96   \n",
       "4                4         16         1   29       0     172      96   \n",
       "...            ...        ...       ...  ...     ...     ...     ...   \n",
       "1412860       6859          7         7   30       0     175      62   \n",
       "1412861       6860          7         7   30       0     175      62   \n",
       "1412862       6861          7         7   30       0     175      62   \n",
       "1412863       6862          7         7   30       0     175      62   \n",
       "1412864       6863          7         7   30       0     175      62   \n",
       "\n",
       "         attitude.roll  attitude.pitch  attitude.yaw  gravity.x  gravity.y  \\\n",
       "0             1.044129       -1.364544     -0.762006   0.177020   0.978805   \n",
       "1             1.033699       -1.374970     -0.777007   0.167157   0.980887   \n",
       "2             1.020201       -1.385414     -0.792103   0.157058   0.982866   \n",
       "3             0.991317       -1.392669     -0.820281   0.148236   0.984177   \n",
       "4             0.938219       -1.393323     -0.871891   0.142361   0.984293   \n",
       "...                ...             ...           ...        ...        ...   \n",
       "1412860      -0.023793       -0.999631     -0.784959  -0.012861   0.841271   \n",
       "1412861      -0.043543       -1.004392     -0.804742  -0.023357   0.843836   \n",
       "1412862      -0.040952       -1.016429     -0.808555  -0.021550   0.850234   \n",
       "1412863      -0.034956       -1.023650     -0.799503  -0.018182   0.854013   \n",
       "1412864      -0.042453       -1.030629     -0.803795  -0.021826   0.857622   \n",
       "\n",
       "         gravity.z  rotationRate.x  rotationRate.y  rotationRate.z  \\\n",
       "0        -0.102928       -0.055552        0.296486       -0.517680   \n",
       "1        -0.099540       -0.160723        0.148822       -0.528907   \n",
       "2        -0.096422       -0.125106        0.032462       -0.498599   \n",
       "3        -0.097010        0.135182       -0.113719       -0.398317   \n",
       "4        -0.104360        0.475710       -0.107196       -0.194053   \n",
       "...            ...             ...             ...             ...   \n",
       "1412860  -0.540444        0.047839       -0.205053       -0.354167   \n",
       "1412861  -0.536076       -0.498880        0.069946       -0.452342   \n",
       "1412862  -0.525946       -0.519771        0.242518        0.098493   \n",
       "1412863  -0.519916       -0.363679       -0.225310        0.272167   \n",
       "1412864  -0.513798       -0.222550       -0.083684       -0.367962   \n",
       "\n",
       "         userAcceleration.x  userAcceleration.y  userAcceleration.z  act  \n",
       "0                  0.277799            0.073975           -0.005989    0  \n",
       "1                  0.209674           -0.051886            0.032646    0  \n",
       "2                  0.164369           -0.157625            0.108598    0  \n",
       "3                  0.138705           -0.194550            0.106623    0  \n",
       "4                  0.141697           -0.141046            0.052633    0  \n",
       "...                     ...                 ...                 ...  ...  \n",
       "1412860            0.114348            0.727546            0.388558    5  \n",
       "1412861           -0.366063            0.680807            0.583729    5  \n",
       "1412862           -0.240245            0.207811            0.528601    5  \n",
       "1412863           -0.199577           -0.125375            0.559192    5  \n",
       "1412864           -0.109430           -0.021410            0.744221    5  \n",
       "\n",
       "[1412865 rows x 20 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_frame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "8848d4d3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T08:51:22.633470Z",
     "iopub.status.busy": "2025-03-29T08:51:22.633125Z",
     "iopub.status.idle": "2025-03-29T08:51:23.020234Z",
     "shell.execute_reply": "2025-03-29T08:51:23.018929Z"
    },
    "papermill": {
     "duration": 0.396859,
     "end_time": "2025-03-29T08:51:23.022164",
     "exception": false,
     "start_time": "2025-03-29T08:51:22.625305",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='act', ylabel='count'>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(data_frame, x='act')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "be54b289",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T08:51:23.038797Z",
     "iopub.status.busy": "2025-03-29T08:51:23.038322Z",
     "iopub.status.idle": "2025-03-29T08:51:23.368349Z",
     "shell.execute_reply": "2025-03-29T08:51:23.367176Z"
    },
    "papermill": {
     "duration": 0.340401,
     "end_time": "2025-03-29T08:51:23.370158",
     "exception": false,
     "start_time": "2025-03-29T08:51:23.029757",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='trial_id', ylabel='count'>"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(data_frame, x='trial_id')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b89946cc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T08:51:23.388391Z",
     "iopub.status.busy": "2025-03-29T08:51:23.388006Z",
     "iopub.status.idle": "2025-03-29T08:51:23.806807Z",
     "shell.execute_reply": "2025-03-29T08:51:23.805772Z"
    },
    "papermill": {
     "duration": 0.429646,
     "end_time": "2025-03-29T08:51:23.808597",
     "exception": false,
     "start_time": "2025-03-29T08:51:23.378951",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='person_id', ylabel='count'>"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(data_frame, x='person_id')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fc42ba86",
   "metadata": {
    "papermill": {
     "duration": 0.008144,
     "end_time": "2025-03-29T08:51:23.825386",
     "exception": false,
     "start_time": "2025-03-29T08:51:23.817242",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "latest from chatgpt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "6ad522e5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-29T08:51:23.844167Z",
     "iopub.status.busy": "2025-03-29T08:51:23.843812Z",
     "iopub.status.idle": "2025-03-29T08:51:50.289095Z",
     "shell.execute_reply": "2025-03-29T08:51:50.287841Z"
    },
    "papermill": {
     "duration": 26.456752,
     "end_time": "2025-03-29T08:51:50.290965",
     "exception": false,
     "start_time": "2025-03-29T08:51:23.834213",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "cpu\n",
      "Epoch 1 | Train Loss: 3.8465\n",
      "Epoch 2 | Train Loss: 2.5468\n",
      "Epoch 3 | Train Loss: 2.5406\n",
      "Epoch 4 | Train Loss: 2.5428\n",
      "Epoch 5 | Train Loss: 2.5414\n",
      "Epoch 6 | Train Loss: 2.5451\n",
      "Epoch 7 | Train Loss: 2.5421\n",
      "Epoch 8 | Train Loss: 2.5389\n",
      "Epoch 9 | Train Loss: 2.5353\n",
      "Epoch 10 | Train Loss: 2.5328\n",
      "Epoch 11 | Train Loss: 2.5306\n",
      "Epoch 12 | Train Loss: 2.5245\n",
      "Epoch 13 | Train Loss: 2.5241\n",
      "Epoch 14 | Train Loss: 2.5155\n",
      "Epoch 15 | Train Loss: 2.5122\n",
      "Epoch 16 | Train Loss: 2.5036\n",
      "Epoch 17 | Train Loss: 2.4979\n",
      "Epoch 18 | Train Loss: 2.4928\n",
      "Epoch 19 | Train Loss: 2.4832\n",
      "Epoch 20 | Train Loss: 2.4771\n",
      "Test Loss: 2.6798\n"
     ]
    }
   ],
   "source": [
    "from torch.utils.data import Dataset, DataLoader\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "df = data_frame.sample(10000).copy()\n",
    "\n",
    "input_features = ['attitude.roll',\n",
    "                  'attitude.pitch',\n",
    "                  'attitude.yaw',\n",
    "                  'gender',\n",
    "                  'age',\n",
    "                  'height',\n",
    "                  'weight',\n",
    "                  \n",
    "                  'gravity.x',\n",
    "                  'gravity.y',\n",
    "                  'gravity.z',\n",
    "                  'rotationRate.x',\n",
    "                  'rotationRate.y',\n",
    "                  'rotationRate.z',\n",
    "                  'userAcceleration.x',\n",
    "                  'userAcceleration.y',\n",
    "                  'userAcceleration.z']\n",
    "target_variable = 'act' # Replace with your actual target column\n",
    "\n",
    "scaler = StandardScaler()\n",
    "X_scaled = scaler.fit_transform(df[input_features])\n",
    "y = df[target_variable].values\n",
    "\n",
    "seq_len = 24\n",
    "\n",
    "# Build sequences BEFORE splitting\n",
    "X_seq = []\n",
    "y_seq = []\n",
    "\n",
    "for i in range(len(df) - seq_len):\n",
    "    X_seq.append(X_scaled[i:i+seq_len])\n",
    "    y_seq.append(y[i+seq_len])\n",
    "\n",
    "X_seq = np.array(X_seq)   # shape: (samples, seq_len, features)\n",
    "y_seq = np.array(y_seq)   # shape: (samples,)\n",
    "\n",
    "# Train / Test Split correctly on sequences\n",
    "X_train, X_test, y_train, y_test = train_test_split(X_seq, y_seq, test_size=0.2, shuffle=False)\n",
    "\n",
    "# Convert to torch tensors\n",
    "train_dataset = torch.utils.data.TensorDataset(torch.FloatTensor(X_train), torch.FloatTensor(y_train))\n",
    "test_dataset = torch.utils.data.TensorDataset(torch.FloatTensor(X_test), torch.FloatTensor(y_test))\n",
    "\n",
    "train_loader = DataLoader(train_dataset, batch_size=32, shuffle=True)\n",
    "test_loader = DataLoader(test_dataset, batch_size=32, shuffle=False)\n",
    "\n",
    "\n",
    "# ------------------------------\n",
    "# 4. LSTM Model\n",
    "# ------------------------------\n",
    "class LSTMModel(nn.Module):\n",
    "    def __init__(self, input_size, hidden_size, num_layers=1):\n",
    "        super(LSTMModel, self).__init__()\n",
    "        self.lstm = nn.LSTM(input_size, hidden_size, num_layers, batch_first=True)\n",
    "        self.fc = nn.Linear(hidden_size, 1)\n",
    "\n",
    "    def forward(self, x):\n",
    "        _, (hn, _) = self.lstm(x)\n",
    "        out = self.fc(hn[-1])\n",
    "        return out.squeeze()\n",
    "        \n",
    "# input_size=6 = number of features in input_features\n",
    "model = LSTMModel(input_size=len(input_features), hidden_size=32)\n",
    "\n",
    "\n",
    "# ------------------------------\n",
    "# 5. Training\n",
    "# ------------------------------\n",
    "device = 'cuda' if torch.cuda.is_available() else 'cpu'\n",
    "model.to(device)\n",
    "print(device)\n",
    "\n",
    "optimizer = torch.optim.Adam(model.parameters(), lr=0.001)\n",
    "criterion = nn.MSELoss()\n",
    "\n",
    "for epoch in range(20):\n",
    "    model.train()\n",
    "    total_loss = 0\n",
    "    for X_batch, y_batch in train_loader:\n",
    "        X_batch, y_batch = X_batch.to(device), y_batch.to(device)\n",
    "        \n",
    "        optimizer.zero_grad()\n",
    "        output = model(X_batch)\n",
    "        loss = criterion(output, y_batch)\n",
    "        loss.backward()\n",
    "        optimizer.step()\n",
    "        \n",
    "        total_loss += loss.item()\n",
    "    print(f\"Epoch {epoch+1} | Train Loss: {total_loss / len(train_loader):.4f}\")\n",
    "\n",
    "\n",
    "# ------------------------------\n",
    "# 6. Evaluation\n",
    "# ------------------------------\n",
    "model.eval()\n",
    "with torch.no_grad():\n",
    "    total_loss = 0\n",
    "    for X_batch, y_batch in test_loader:\n",
    "        X_batch, y_batch = X_batch.to(device), y_batch.to(device)\n",
    "        output = model(X_batch)\n",
    "        loss = criterion(output, y_batch)\n",
    "        total_loss += loss.item()\n",
    "    print(f\"Test Loss: {total_loss / len(test_loader):.4f}\")\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 16752,
     "sourceId": 22073,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30918,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 66.648678,
   "end_time": "2025-03-29T08:51:52.979328",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-03-29T08:50:46.330650",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
