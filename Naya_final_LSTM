{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1afb11c3",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:08.991552Z",
     "iopub.status.busy": "2025-03-30T12:21:08.991135Z",
     "iopub.status.idle": "2025-03-30T12:21:10.532895Z",
     "shell.execute_reply": "2025-03-30T12:21:10.531781Z"
    },
    "papermill": {
     "duration": 1.553891,
     "end_time": "2025-03-30T12:21:10.535128",
     "exception": false,
     "start_time": "2025-03-30T12:21:08.981237",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/pm-79486644-at-03-30-2025-12-20-44/__script__.py\n",
      "/kaggle/input/pm-79486644-at-03-30-2025-12-20-44/__results__.html\n",
      "/kaggle/input/pm-79486644-at-03-30-2025-12-20-44/input_requirements.txt\n",
      "/kaggle/input/pm-79486644-at-03-30-2025-12-20-44/__script__.ipynb\n",
      "/kaggle/input/pm-79486644-at-03-30-2025-12-20-44/__output__.json\n",
      "/kaggle/input/pm-79486644-at-03-30-2025-12-20-44/custom.css\n",
      "/kaggle/input/motionsense-dataset/data_subjects_info.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/__MACOSX/A_DeviceMotion_data/dws_1/._sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/__MACOSX/A_DeviceMotion_data/jog_9/._sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/__MACOSX/A_DeviceMotion_data/jog_9/._sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/__MACOSX/A_DeviceMotion_data/wlk_7/._sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_1/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_12/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_5/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_4/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_15/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_8/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_14/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_16/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/sit_13/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_2/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/std_6/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/dws_11/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/jog_9/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/ups_3/sub_7.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_16.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_18.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_3.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_12.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_1.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_4.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_21.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_2.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_19.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_17.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_8.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_6.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_22.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_9.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_20.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_5.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_15.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_24.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_14.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_13.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_11.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_10.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_23.csv\n",
      "/kaggle/input/motionsense-dataset/A_DeviceMotion_data/A_DeviceMotion_data/wlk_7/sub_7.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "730b6199",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:10.554427Z",
     "iopub.status.busy": "2025-03-30T12:21:10.553898Z",
     "iopub.status.idle": "2025-03-30T12:21:16.454959Z",
     "shell.execute_reply": "2025-03-30T12:21:16.453650Z"
    },
    "papermill": {
     "duration": 5.912146,
     "end_time": "2025-03-30T12:21:16.456789",
     "exception": false,
     "start_time": "2025-03-30T12:21:10.544643",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting torchviz\r\n",
      "  Downloading torchviz-0.0.3-py3-none-any.whl.metadata (2.1 kB)\r\n",
      "Requirement already satisfied: torch in /usr/local/lib/python3.10/dist-packages (from torchviz) (2.5.1+cu121)\r\n",
      "Requirement already satisfied: graphviz in /usr/local/lib/python3.10/dist-packages (from torchviz) (0.20.3)\r\n",
      "Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch->torchviz) (3.17.0)\r\n",
      "Requirement already satisfied: typing-extensions>=4.8.0 in /usr/local/lib/python3.10/dist-packages (from torch->torchviz) (4.12.2)\r\n",
      "Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch->torchviz) (3.4.2)\r\n",
      "Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch->torchviz) (3.1.4)\r\n",
      "Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from torch->torchviz) (2024.12.0)\r\n",
      "Requirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.10/dist-packages (from torch->torchviz) (1.13.1)\r\n",
      "Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from sympy==1.13.1->torch->torchviz) (1.3.0)\r\n",
      "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch->torchviz) (3.0.2)\r\n",
      "Downloading torchviz-0.0.3-py3-none-any.whl (5.7 kB)\r\n",
      "Installing collected packages: torchviz\r\n",
      "Successfully installed torchviz-0.0.3\r\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "%pip install torchviz"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "ede200d2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:16.476171Z",
     "iopub.status.busy": "2025-03-30T12:21:16.475827Z",
     "iopub.status.idle": "2025-03-30T12:21:16.480721Z",
     "shell.execute_reply": "2025-03-30T12:21:16.479294Z"
    },
    "papermill": {
     "duration": 0.016479,
     "end_time": "2025-03-30T12:21:16.482320",
     "exception": false,
     "start_time": "2025-03-30T12:21:16.465841",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d4f399d9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:16.501597Z",
     "iopub.status.busy": "2025-03-30T12:21:16.501199Z",
     "iopub.status.idle": "2025-03-30T12:21:17.867969Z",
     "shell.execute_reply": "2025-03-30T12:21:17.866731Z"
    },
    "papermill": {
     "duration": 1.378575,
     "end_time": "2025-03-30T12:21:17.869832",
     "exception": false,
     "start_time": "2025-03-30T12:21:16.491257",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from scipy.signal import butter, lfilter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "04738130",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:17.889043Z",
     "iopub.status.busy": "2025-03-30T12:21:17.888534Z",
     "iopub.status.idle": "2025-03-30T12:21:18.418566Z",
     "shell.execute_reply": "2025-03-30T12:21:18.417575Z"
    },
    "papermill": {
     "duration": 0.541483,
     "end_time": "2025-03-30T12:21:18.420382",
     "exception": false,
     "start_time": "2025-03-30T12:21:17.878899",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "sns.set_theme(style=\"ticks\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "459c887b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:18.439894Z",
     "iopub.status.busy": "2025-03-30T12:21:18.439325Z",
     "iopub.status.idle": "2025-03-30T12:21:22.704732Z",
     "shell.execute_reply": "2025-03-30T12:21:22.703571Z"
    },
    "papermill": {
     "duration": 4.276967,
     "end_time": "2025-03-30T12:21:22.706716",
     "exception": false,
     "start_time": "2025-03-30T12:21:18.429749",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import torch\n",
    "import torch.optim as optim\n",
    "import torch.nn as nn\n",
    "from torch.utils.data import TensorDataset, DataLoader,  Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e2b9db73",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:22.726799Z",
     "iopub.status.busy": "2025-03-30T12:21:22.726044Z",
     "iopub.status.idle": "2025-03-30T12:21:23.037574Z",
     "shell.execute_reply": "2025-03-30T12:21:23.036376Z"
    },
    "papermill": {
     "duration": 0.324039,
     "end_time": "2025-03-30T12:21:23.039964",
     "exception": false,
     "start_time": "2025-03-30T12:21:22.715925",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.preprocessing import LabelEncoder"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a302254e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:23.066601Z",
     "iopub.status.busy": "2025-03-30T12:21:23.066186Z",
     "iopub.status.idle": "2025-03-30T12:21:49.352391Z",
     "shell.execute_reply": "2025-03-30T12:21:49.351060Z"
    },
    "papermill": {
     "duration": 26.298533,
     "end_time": "2025-03-30T12:21:49.354395",
     "exception": false,
     "start_time": "2025-03-30T12:21:23.055862",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# change these following three lines only\n",
    "subject_data_file = 'data_subjects_info.csv'\n",
    "data_dir = '/kaggle/input/motionsense-dataset/A_DeviceMotion_data'\n",
    "\n",
    "os.chdir(data_dir)\n",
    "os.chdir(os.pardir)\n",
    "\n",
    "def get_all_dataset_paths(input_dir) -> []:\n",
    "    input_files = []\n",
    "    for dirs, subdirs, files in os.walk(input_dir):\n",
    "        for file in files:\n",
    "            if file.endswith('.csv'):\n",
    "                input_files.append(os.path.join(dirs, file))\n",
    "    return input_files\n",
    "\n",
    "def load_whole_dataframe_from_paths(paths, meta) -> pd.DataFrame:\n",
    "    \n",
    "    df = pd.DataFrame()\n",
    "\n",
    "    for p in paths:\n",
    "        c_dir, c_file = p.split('/')[-2], p.split('/')[-1]\n",
    "        c_cat, c_ses = c_dir.split('_')[-2], c_dir.split('_')[-1]\n",
    "        c_sub = c_file.split('_')[-1].split('.')[-2]\n",
    "        \n",
    "        tdf = pd.read_csv(p, encoding = \"utf-8\")\n",
    "        tdf = tdf.assign(person_id = int(c_sub))\n",
    "        tdf = tdf.assign(trial_id = int(c_ses))\n",
    "        tdf = tdf.assign(activity = str(c_cat))\n",
    "        tdf = tdf.assign(age = int(meta.age[int(c_sub) - 1]))\n",
    "        tdf = tdf.assign(gender = int(meta.gender[int(c_sub) - 1]))\n",
    "        tdf = tdf.assign(height = int(meta.height[int(c_sub) - 1]))\n",
    "        tdf = tdf.assign(weight = int(meta.weight[int(c_sub) - 1]))\n",
    "\n",
    "        df = pd.concat([df, tdf])\n",
    "    \n",
    "    df.reset_index(drop=True, inplace=True)\n",
    "    return df\n",
    "\n",
    "subject_data_frame = pd.DataFrame(pd.read_csv(subject_data_file, encoding = \"utf-8\"))\n",
    "all_dataset_paths = get_all_dataset_paths(data_dir)\n",
    "data_frame = load_whole_dataframe_from_paths(all_dataset_paths, subject_data_frame)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "d020cda8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:49.374248Z",
     "iopub.status.busy": "2025-03-30T12:21:49.373870Z",
     "iopub.status.idle": "2025-03-30T12:21:49.396692Z",
     "shell.execute_reply": "2025-03-30T12:21:49.395518Z"
    },
    "papermill": {
     "duration": 0.034866,
     "end_time": "2025-03-30T12:21:49.398477",
     "exception": false,
     "start_time": "2025-03-30T12:21:49.363611",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>code</th>\n",
       "      <th>weight</th>\n",
       "      <th>height</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>102</td>\n",
       "      <td>188</td>\n",
       "      <td>46</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>72</td>\n",
       "      <td>180</td>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>48</td>\n",
       "      <td>161</td>\n",
       "      <td>28</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>90</td>\n",
       "      <td>176</td>\n",
       "      <td>31</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>48</td>\n",
       "      <td>164</td>\n",
       "      <td>23</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>76</td>\n",
       "      <td>180</td>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>62</td>\n",
       "      <td>175</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>52</td>\n",
       "      <td>161</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>93</td>\n",
       "      <td>190</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>72</td>\n",
       "      <td>164</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>11</td>\n",
       "      <td>70</td>\n",
       "      <td>178</td>\n",
       "      <td>24</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12</td>\n",
       "      <td>60</td>\n",
       "      <td>167</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>13</td>\n",
       "      <td>60</td>\n",
       "      <td>178</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>14</td>\n",
       "      <td>70</td>\n",
       "      <td>180</td>\n",
       "      <td>35</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>15</td>\n",
       "      <td>70</td>\n",
       "      <td>185</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>16</td>\n",
       "      <td>96</td>\n",
       "      <td>172</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>17</td>\n",
       "      <td>76</td>\n",
       "      <td>180</td>\n",
       "      <td>26</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>18</td>\n",
       "      <td>54</td>\n",
       "      <td>164</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>19</td>\n",
       "      <td>78</td>\n",
       "      <td>164</td>\n",
       "      <td>28</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>20</td>\n",
       "      <td>88</td>\n",
       "      <td>180</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>21</td>\n",
       "      <td>52</td>\n",
       "      <td>165</td>\n",
       "      <td>24</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>22</td>\n",
       "      <td>100</td>\n",
       "      <td>186</td>\n",
       "      <td>31</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>23</td>\n",
       "      <td>68</td>\n",
       "      <td>170</td>\n",
       "      <td>25</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>24</td>\n",
       "      <td>74</td>\n",
       "      <td>173</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    code  weight  height  age  gender\n",
       "0      1     102     188   46       1\n",
       "1      2      72     180   28       1\n",
       "2      3      48     161   28       0\n",
       "3      4      90     176   31       1\n",
       "4      5      48     164   23       0\n",
       "5      6      76     180   28       1\n",
       "6      7      62     175   30       0\n",
       "7      8      52     161   24       0\n",
       "8      9      93     190   32       1\n",
       "9     10      72     164   31       0\n",
       "10    11      70     178   24       1\n",
       "11    12      60     167   33       1\n",
       "12    13      60     178   33       1\n",
       "13    14      70     180   35       1\n",
       "14    15      70     185   33       1\n",
       "15    16      96     172   29       0\n",
       "16    17      76     180   26       1\n",
       "17    18      54     164   26       0\n",
       "18    19      78     164   28       0\n",
       "19    20      88     180   25       1\n",
       "20    21      52     165   24       1\n",
       "21    22     100     186   31       1\n",
       "22    23      68     170   25       0\n",
       "23    24      74     173   18       0"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "subject_data_frame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8002de38",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:49.418223Z",
     "iopub.status.busy": "2025-03-30T12:21:49.417899Z",
     "iopub.status.idle": "2025-03-30T12:21:49.442963Z",
     "shell.execute_reply": "2025-03-30T12:21:49.441828Z"
    },
    "papermill": {
     "duration": 0.037142,
     "end_time": "2025-03-30T12:21:49.445030",
     "exception": false,
     "start_time": "2025-03-30T12:21:49.407888",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>person_id</th>\n",
       "      <th>trial_id</th>\n",
       "      <th>activity</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>attitude.roll</th>\n",
       "      <th>attitude.pitch</th>\n",
       "      <th>attitude.yaw</th>\n",
       "      <th>gravity.x</th>\n",
       "      <th>gravity.y</th>\n",
       "      <th>gravity.z</th>\n",
       "      <th>rotationRate.x</th>\n",
       "      <th>rotationRate.y</th>\n",
       "      <th>rotationRate.z</th>\n",
       "      <th>userAcceleration.x</th>\n",
       "      <th>userAcceleration.y</th>\n",
       "      <th>userAcceleration.z</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>dws</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>96</td>\n",
       "      <td>1.044129</td>\n",
       "      <td>-1.364544</td>\n",
       "      <td>-0.762006</td>\n",
       "      <td>0.177020</td>\n",
       "      <td>0.978805</td>\n",
       "      <td>-0.102928</td>\n",
       "      <td>-0.055552</td>\n",
       "      <td>0.296486</td>\n",
       "      <td>-0.517680</td>\n",
       "      <td>0.277799</td>\n",
       "      <td>0.073975</td>\n",
       "      <td>-0.005989</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>dws</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>96</td>\n",
       "      <td>1.033699</td>\n",
       "      <td>-1.374970</td>\n",
       "      <td>-0.777007</td>\n",
       "      <td>0.167157</td>\n",
       "      <td>0.980887</td>\n",
       "      <td>-0.099540</td>\n",
       "      <td>-0.160723</td>\n",
       "      <td>0.148822</td>\n",
       "      <td>-0.528907</td>\n",
       "      <td>0.209674</td>\n",
       "      <td>-0.051886</td>\n",
       "      <td>0.032646</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>dws</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>96</td>\n",
       "      <td>1.020201</td>\n",
       "      <td>-1.385414</td>\n",
       "      <td>-0.792103</td>\n",
       "      <td>0.157058</td>\n",
       "      <td>0.982866</td>\n",
       "      <td>-0.096422</td>\n",
       "      <td>-0.125106</td>\n",
       "      <td>0.032462</td>\n",
       "      <td>-0.498599</td>\n",
       "      <td>0.164369</td>\n",
       "      <td>-0.157625</td>\n",
       "      <td>0.108598</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>dws</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>96</td>\n",
       "      <td>0.991317</td>\n",
       "      <td>-1.392669</td>\n",
       "      <td>-0.820281</td>\n",
       "      <td>0.148236</td>\n",
       "      <td>0.984177</td>\n",
       "      <td>-0.097010</td>\n",
       "      <td>0.135182</td>\n",
       "      <td>-0.113719</td>\n",
       "      <td>-0.398317</td>\n",
       "      <td>0.138705</td>\n",
       "      <td>-0.194550</td>\n",
       "      <td>0.106623</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>dws</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>96</td>\n",
       "      <td>0.938219</td>\n",
       "      <td>-1.393323</td>\n",
       "      <td>-0.871891</td>\n",
       "      <td>0.142361</td>\n",
       "      <td>0.984293</td>\n",
       "      <td>-0.104360</td>\n",
       "      <td>0.475710</td>\n",
       "      <td>-0.107196</td>\n",
       "      <td>-0.194053</td>\n",
       "      <td>0.141697</td>\n",
       "      <td>-0.141046</td>\n",
       "      <td>0.052633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412860</th>\n",
       "      <td>6859</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>wlk</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>175</td>\n",
       "      <td>62</td>\n",
       "      <td>-0.023793</td>\n",
       "      <td>-0.999631</td>\n",
       "      <td>-0.784959</td>\n",
       "      <td>-0.012861</td>\n",
       "      <td>0.841271</td>\n",
       "      <td>-0.540444</td>\n",
       "      <td>0.047839</td>\n",
       "      <td>-0.205053</td>\n",
       "      <td>-0.354167</td>\n",
       "      <td>0.114348</td>\n",
       "      <td>0.727546</td>\n",
       "      <td>0.388558</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412861</th>\n",
       "      <td>6860</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>wlk</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>175</td>\n",
       "      <td>62</td>\n",
       "      <td>-0.043543</td>\n",
       "      <td>-1.004392</td>\n",
       "      <td>-0.804742</td>\n",
       "      <td>-0.023357</td>\n",
       "      <td>0.843836</td>\n",
       "      <td>-0.536076</td>\n",
       "      <td>-0.498880</td>\n",
       "      <td>0.069946</td>\n",
       "      <td>-0.452342</td>\n",
       "      <td>-0.366063</td>\n",
       "      <td>0.680807</td>\n",
       "      <td>0.583729</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412862</th>\n",
       "      <td>6861</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>wlk</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>175</td>\n",
       "      <td>62</td>\n",
       "      <td>-0.040952</td>\n",
       "      <td>-1.016429</td>\n",
       "      <td>-0.808555</td>\n",
       "      <td>-0.021550</td>\n",
       "      <td>0.850234</td>\n",
       "      <td>-0.525946</td>\n",
       "      <td>-0.519771</td>\n",
       "      <td>0.242518</td>\n",
       "      <td>0.098493</td>\n",
       "      <td>-0.240245</td>\n",
       "      <td>0.207811</td>\n",
       "      <td>0.528601</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412863</th>\n",
       "      <td>6862</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>wlk</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>175</td>\n",
       "      <td>62</td>\n",
       "      <td>-0.034956</td>\n",
       "      <td>-1.023650</td>\n",
       "      <td>-0.799503</td>\n",
       "      <td>-0.018182</td>\n",
       "      <td>0.854013</td>\n",
       "      <td>-0.519916</td>\n",
       "      <td>-0.363679</td>\n",
       "      <td>-0.225310</td>\n",
       "      <td>0.272167</td>\n",
       "      <td>-0.199577</td>\n",
       "      <td>-0.125375</td>\n",
       "      <td>0.559192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412864</th>\n",
       "      <td>6863</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>wlk</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>175</td>\n",
       "      <td>62</td>\n",
       "      <td>-0.042453</td>\n",
       "      <td>-1.030629</td>\n",
       "      <td>-0.803795</td>\n",
       "      <td>-0.021826</td>\n",
       "      <td>0.857622</td>\n",
       "      <td>-0.513798</td>\n",
       "      <td>-0.222550</td>\n",
       "      <td>-0.083684</td>\n",
       "      <td>-0.367962</td>\n",
       "      <td>-0.109430</td>\n",
       "      <td>-0.021410</td>\n",
       "      <td>0.744221</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1412865 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Unnamed: 0  person_id  trial_id activity  age  gender  height  weight  \\\n",
       "0                0         16         1      dws   29       0     172      96   \n",
       "1                1         16         1      dws   29       0     172      96   \n",
       "2                2         16         1      dws   29       0     172      96   \n",
       "3                3         16         1      dws   29       0     172      96   \n",
       "4                4         16         1      dws   29       0     172      96   \n",
       "...            ...        ...       ...      ...  ...     ...     ...     ...   \n",
       "1412860       6859          7         7      wlk   30       0     175      62   \n",
       "1412861       6860          7         7      wlk   30       0     175      62   \n",
       "1412862       6861          7         7      wlk   30       0     175      62   \n",
       "1412863       6862          7         7      wlk   30       0     175      62   \n",
       "1412864       6863          7         7      wlk   30       0     175      62   \n",
       "\n",
       "         attitude.roll  attitude.pitch  attitude.yaw  gravity.x  gravity.y  \\\n",
       "0             1.044129       -1.364544     -0.762006   0.177020   0.978805   \n",
       "1             1.033699       -1.374970     -0.777007   0.167157   0.980887   \n",
       "2             1.020201       -1.385414     -0.792103   0.157058   0.982866   \n",
       "3             0.991317       -1.392669     -0.820281   0.148236   0.984177   \n",
       "4             0.938219       -1.393323     -0.871891   0.142361   0.984293   \n",
       "...                ...             ...           ...        ...        ...   \n",
       "1412860      -0.023793       -0.999631     -0.784959  -0.012861   0.841271   \n",
       "1412861      -0.043543       -1.004392     -0.804742  -0.023357   0.843836   \n",
       "1412862      -0.040952       -1.016429     -0.808555  -0.021550   0.850234   \n",
       "1412863      -0.034956       -1.023650     -0.799503  -0.018182   0.854013   \n",
       "1412864      -0.042453       -1.030629     -0.803795  -0.021826   0.857622   \n",
       "\n",
       "         gravity.z  rotationRate.x  rotationRate.y  rotationRate.z  \\\n",
       "0        -0.102928       -0.055552        0.296486       -0.517680   \n",
       "1        -0.099540       -0.160723        0.148822       -0.528907   \n",
       "2        -0.096422       -0.125106        0.032462       -0.498599   \n",
       "3        -0.097010        0.135182       -0.113719       -0.398317   \n",
       "4        -0.104360        0.475710       -0.107196       -0.194053   \n",
       "...            ...             ...             ...             ...   \n",
       "1412860  -0.540444        0.047839       -0.205053       -0.354167   \n",
       "1412861  -0.536076       -0.498880        0.069946       -0.452342   \n",
       "1412862  -0.525946       -0.519771        0.242518        0.098493   \n",
       "1412863  -0.519916       -0.363679       -0.225310        0.272167   \n",
       "1412864  -0.513798       -0.222550       -0.083684       -0.367962   \n",
       "\n",
       "         userAcceleration.x  userAcceleration.y  userAcceleration.z  \n",
       "0                  0.277799            0.073975           -0.005989  \n",
       "1                  0.209674           -0.051886            0.032646  \n",
       "2                  0.164369           -0.157625            0.108598  \n",
       "3                  0.138705           -0.194550            0.106623  \n",
       "4                  0.141697           -0.141046            0.052633  \n",
       "...                     ...                 ...                 ...  \n",
       "1412860            0.114348            0.727546            0.388558  \n",
       "1412861           -0.366063            0.680807            0.583729  \n",
       "1412862           -0.240245            0.207811            0.528601  \n",
       "1412863           -0.199577           -0.125375            0.559192  \n",
       "1412864           -0.109430           -0.021410            0.744221  \n",
       "\n",
       "[1412865 rows x 20 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_frame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "c8cc732c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:49.465994Z",
     "iopub.status.busy": "2025-03-30T12:21:49.465646Z",
     "iopub.status.idle": "2025-03-30T12:21:49.501053Z",
     "shell.execute_reply": "2025-03-30T12:21:49.499972Z"
    },
    "papermill": {
     "duration": 0.048116,
     "end_time": "2025-03-30T12:21:49.503035",
     "exception": false,
     "start_time": "2025-03-30T12:21:49.454919",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "person_id\n",
       "19           71949\n",
       "21           68932\n",
       "16           65417\n",
       "18           62808\n",
       "3            62553\n",
       "2            62339\n",
       "1            62312\n",
       "7            61276\n",
       "8            60727\n",
       "10           59796\n",
       "15           59443\n",
       "11           59292\n",
       "6            57328\n",
       "9            57136\n",
       "14           56487\n",
       "4            56066\n",
       "22           56028\n",
       "17           55539\n",
       "20           55153\n",
       "23           54556\n",
       "12           53293\n",
       "5            52283\n",
       "13           51147\n",
       "24           51005\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_frame.value_counts(['person_id'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "34c4b3f1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:49.523653Z",
     "iopub.status.busy": "2025-03-30T12:21:49.523277Z",
     "iopub.status.idle": "2025-03-30T12:21:49.552400Z",
     "shell.execute_reply": "2025-03-30T12:21:49.551330Z"
    },
    "papermill": {
     "duration": 0.041078,
     "end_time": "2025-03-30T12:21:49.554076",
     "exception": false,
     "start_time": "2025-03-30T12:21:49.512998",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "trial_id\n",
       "5           234657\n",
       "6           224816\n",
       "7           158645\n",
       "8           120371\n",
       "9           104327\n",
       "13          104121\n",
       "14           81611\n",
       "4            71072\n",
       "15           65272\n",
       "2            59108\n",
       "3            58204\n",
       "1            50246\n",
       "16           29904\n",
       "12           28009\n",
       "11           22502\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_frame.value_counts(['trial_id'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "a98eeed2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:49.575053Z",
     "iopub.status.busy": "2025-03-30T12:21:49.574667Z",
     "iopub.status.idle": "2025-03-30T12:21:49.662552Z",
     "shell.execute_reply": "2025-03-30T12:21:49.661531Z"
    },
    "papermill": {
     "duration": 0.100209,
     "end_time": "2025-03-30T12:21:49.664327",
     "exception": false,
     "start_time": "2025-03-30T12:21:49.564118",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "activity\n",
       "wlk         344288\n",
       "sit         338778\n",
       "std         306427\n",
       "ups         157285\n",
       "jog         134231\n",
       "dws         131856\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_frame.value_counts(['activity'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "fe29c014",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:49.685579Z",
     "iopub.status.busy": "2025-03-30T12:21:49.685170Z",
     "iopub.status.idle": "2025-03-30T12:21:49.715080Z",
     "shell.execute_reply": "2025-03-30T12:21:49.713866Z"
    },
    "papermill": {
     "duration": 0.042308,
     "end_time": "2025-03-30T12:21:49.716897",
     "exception": false,
     "start_time": "2025-03-30T12:21:49.674589",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "gender\n",
       "1         810495\n",
       "0         602370\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_frame.value_counts(['gender'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "7f7811cc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:49.738048Z",
     "iopub.status.busy": "2025-03-30T12:21:49.737634Z",
     "iopub.status.idle": "2025-03-30T12:21:49.741769Z",
     "shell.execute_reply": "2025-03-30T12:21:49.740555Z"
    },
    "papermill": {
     "duration": 0.016659,
     "end_time": "2025-03-30T12:21:49.743616",
     "exception": false,
     "start_time": "2025-03-30T12:21:49.726957",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# all_dataset_paths"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "1251d858",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:49.765587Z",
     "iopub.status.busy": "2025-03-30T12:21:49.765183Z",
     "iopub.status.idle": "2025-03-30T12:21:49.769484Z",
     "shell.execute_reply": "2025-03-30T12:21:49.768346Z"
    },
    "papermill": {
     "duration": 0.017259,
     "end_time": "2025-03-30T12:21:49.771173",
     "exception": false,
     "start_time": "2025-03-30T12:21:49.753914",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# sns.pairplot(data_frame.sample(100), hue=\"person_id\") # to refactor, too many graphs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "77c81541",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:49.792453Z",
     "iopub.status.busy": "2025-03-30T12:21:49.792048Z",
     "iopub.status.idle": "2025-03-30T12:21:49.915133Z",
     "shell.execute_reply": "2025-03-30T12:21:49.914059Z"
    },
    "papermill": {
     "duration": 0.135955,
     "end_time": "2025-03-30T12:21:49.917246",
     "exception": false,
     "start_time": "2025-03-30T12:21:49.781291",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "p1_dws = data_frame[(data_frame['person_id'] == 1) & (data_frame['activity'] == 'dws')][['trial_id','activity','attitude.roll',\n",
    "    'attitude.pitch',\n",
    "    'attitude.yaw',\n",
    "    'gravity.x',\n",
    "    'gravity.y',\n",
    "    'gravity.z',\n",
    "    'rotationRate.x',\n",
    "    'rotationRate.y',\n",
    "    'rotationRate.z',\n",
    "    'userAcceleration.x',\n",
    "    'userAcceleration.y',\n",
    "    'userAcceleration.z']].reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "03daa016",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:49.938640Z",
     "iopub.status.busy": "2025-03-30T12:21:49.938208Z",
     "iopub.status.idle": "2025-03-30T12:21:49.942071Z",
     "shell.execute_reply": "2025-03-30T12:21:49.941007Z"
    },
    "papermill": {
     "duration": 0.016201,
     "end_time": "2025-03-30T12:21:49.943775",
     "exception": false,
     "start_time": "2025-03-30T12:21:49.927574",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# sns.scatterplot(x=p1_dws.index, y=p1_dws['attitude.roll'], hue=p1_dws['trial_id'],style=\"activity\", data=p1_dws)\n",
    "# sns.pointplot(x=p1_dws.index, y=p1_dws['attitude.pitch'], hue=p1_dws['trial_id'],data=p1_dws)\n",
    "# sns.lineplot(x=p1_dws.index, y=p1_dws['attitude.yaw'], hue=p1_dws['trial_id'],style=\"activity\",data=p1_dws)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6038a878",
   "metadata": {
    "papermill": {
     "duration": 0.00979,
     "end_time": "2025-03-30T12:21:49.963655",
     "exception": false,
     "start_time": "2025-03-30T12:21:49.953865",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Signaling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "1131f1eb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:49.985196Z",
     "iopub.status.busy": "2025-03-30T12:21:49.984839Z",
     "iopub.status.idle": "2025-03-30T12:21:49.989154Z",
     "shell.execute_reply": "2025-03-30T12:21:49.988073Z"
    },
    "papermill": {
     "duration": 0.016843,
     "end_time": "2025-03-30T12:21:49.990719",
     "exception": false,
     "start_time": "2025-03-30T12:21:49.973876",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def load_signal(signal_column):\n",
    "    return data_frame[signal_column].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "bd8d5e77",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:50.013646Z",
     "iopub.status.busy": "2025-03-30T12:21:50.013227Z",
     "iopub.status.idle": "2025-03-30T12:21:50.018216Z",
     "shell.execute_reply": "2025-03-30T12:21:50.017267Z"
    },
    "papermill": {
     "duration": 0.01842,
     "end_time": "2025-03-30T12:21:50.019965",
     "exception": false,
     "start_time": "2025-03-30T12:21:50.001545",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Step 2: Preprocess Signal\n",
    "def preprocess_signal(signal):    \n",
    "    # Subtract the mean to remove the DC component\n",
    "    signal = signal - np.mean(signal)\n",
    "    \n",
    "    # Normalize the signal between -1 and 1\n",
    "    signal_min, signal_max = np.min(signal), np.max(signal)\n",
    "    return  2 * (signal - signal_min) / (signal_max - signal_min) - 1\n",
    "    # return normalized_signal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "d47c59c6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:50.041658Z",
     "iopub.status.busy": "2025-03-30T12:21:50.041248Z",
     "iopub.status.idle": "2025-03-30T12:21:50.046131Z",
     "shell.execute_reply": "2025-03-30T12:21:50.045016Z"
    },
    "papermill": {
     "duration": 0.017689,
     "end_time": "2025-03-30T12:21:50.047923",
     "exception": false,
     "start_time": "2025-03-30T12:21:50.030234",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def apply_filter(signal, cutoff, fs, order=5):\n",
    "    b, a = butter_lowpass(cutoff, fs, order)\n",
    "    filtered_signal = lfilter(b, a, signal)\n",
    "    return filtered_signal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "a05e74a7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:50.069328Z",
     "iopub.status.busy": "2025-03-30T12:21:50.068995Z",
     "iopub.status.idle": "2025-03-30T12:21:50.073820Z",
     "shell.execute_reply": "2025-03-30T12:21:50.072564Z"
    },
    "papermill": {
     "duration": 0.017449,
     "end_time": "2025-03-30T12:21:50.075484",
     "exception": false,
     "start_time": "2025-03-30T12:21:50.058035",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def analyze_signal(signal, fs):\n",
    "    n = len(signal)\n",
    "    f = np.fft.rfftfreq(n, 1/fs)\n",
    "    fft_magnitude = np.abs(np.fft.rfft(signal))\n",
    "    return f, fft_magnitude"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "cfa17a1d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:50.097952Z",
     "iopub.status.busy": "2025-03-30T12:21:50.097596Z",
     "iopub.status.idle": "2025-03-30T12:21:50.102839Z",
     "shell.execute_reply": "2025-03-30T12:21:50.101625Z"
    },
    "papermill": {
     "duration": 0.018031,
     "end_time": "2025-03-30T12:21:50.104699",
     "exception": false,
     "start_time": "2025-03-30T12:21:50.086668",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def butter_lowpass(cutoff, fs, order=5):\n",
    "    nyquist = 0.5 * fs\n",
    "    normal_cutoff = cutoff / nyquist\n",
    "    b, a = butter(order, normal_cutoff, btype='low', analog=False)\n",
    "    return b, a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "dc95f635",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:50.126609Z",
     "iopub.status.busy": "2025-03-30T12:21:50.126155Z",
     "iopub.status.idle": "2025-03-30T12:21:50.133208Z",
     "shell.execute_reply": "2025-03-30T12:21:50.132181Z"
    },
    "papermill": {
     "duration": 0.01981,
     "end_time": "2025-03-30T12:21:50.134940",
     "exception": false,
     "start_time": "2025-03-30T12:21:50.115130",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Step 5: Visualize and Save Results\n",
    "def visualize_signal(original_signal, processed_signal, fft_freq, fft_magnitude, data_title):\n",
    "    plt.figure(figsize=(12, 8))\n",
    "    \n",
    "    # Set the overall title for the entire figure\n",
    "    plt.suptitle(data_title, fontsize=16)\n",
    "    \n",
    "    # Original Signal\n",
    "    plt.subplot(3, 1, 1)\n",
    "    plt.plot(original_signal)\n",
    "    plt.title(\"Original Signal\")\n",
    "    plt.xlabel(\"Time (samples)\")\n",
    "    plt.ylabel(\"Amplitude\")\n",
    "\n",
    "    # Filtered Signal\n",
    "    plt.subplot(3, 1, 2)\n",
    "    plt.plot(processed_signal, color='orange')\n",
    "    plt.title(\"Filtered Signal\")\n",
    "    plt.xlabel(\"Time (samples)\")\n",
    "    plt.ylabel(\"Amplitude\")\n",
    "\n",
    "# FFT Magnitude\n",
    "    plt.subplot(3, 1, 3)\n",
    "    plt.plot(fft_freq, fft_magnitude, color='green')\n",
    "    plt.title(\"Frequency Spectrum\")\n",
    "    plt.xlabel(\"Frequency (Hz)\")\n",
    "    plt.ylabel(\"Magnitude\")\n",
    "\n",
    "    # Add a vertical line at the cutoff frequency indicating the point (5oHz) where the filter started reducing the other frequencies above it\n",
    "    plt.axvline(x=cutoff_freq, color='red', linestyle='--', label=f'Cutoff: {cutoff_freq} Hz')\n",
    "\n",
    "\n",
    "    # Apply logarithmic scale if needed to y-axis for better visualization\n",
    "    plt.yscale('log')\n",
    "\n",
    "    # Set frequency limit if necessary (example: show only up to 80 Hz)\n",
    "    plt.xlim(0, 80)  # Adjust the limit based on your data\n",
    "\n",
    "    plt.tight_layout()\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "0682c34d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:50.156649Z",
     "iopub.status.busy": "2025-03-30T12:21:50.156177Z",
     "iopub.status.idle": "2025-03-30T12:21:52.179464Z",
     "shell.execute_reply": "2025-03-30T12:21:52.178093Z"
    },
    "papermill": {
     "duration": 2.037387,
     "end_time": "2025-03-30T12:21:52.182549",
     "exception": false,
     "start_time": "2025-03-30T12:21:50.145162",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1200x800 with 3 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cutoff_freq = 50  # Hz\n",
    "sampling_rate = 1000  # Hz\n",
    "column_to_process = 'attitude.pitch'\n",
    "dataset_type = 'Motion Sensor Data'\n",
    "\n",
    "signal = load_signal(column_to_process)\n",
    "normalized_signal = preprocess_signal(signal)\n",
    "filtered_signal = apply_filter(normalized_signal, cutoff_freq, sampling_rate)\n",
    "fft_freq, fft_magnitude = analyze_signal(filtered_signal, sampling_rate)\n",
    "\n",
    "    # Visualize results\n",
    "data_title = f\"{dataset_type} - {column_to_process.upper()}\"\n",
    "visualize_signal(signal, filtered_signal, fft_freq, fft_magnitude, data_title)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9525dcd5",
   "metadata": {
    "papermill": {
     "duration": 0.01257,
     "end_time": "2025-03-30T12:21:52.208006",
     "exception": false,
     "start_time": "2025-03-30T12:21:52.195436",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Category activity transferred to numeric value 0 to 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "e7cc7f7d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:52.235188Z",
     "iopub.status.busy": "2025-03-30T12:21:52.234822Z",
     "iopub.status.idle": "2025-03-30T12:21:52.638154Z",
     "shell.execute_reply": "2025-03-30T12:21:52.637157Z"
    },
    "papermill": {
     "duration": 0.419525,
     "end_time": "2025-03-30T12:21:52.640081",
     "exception": false,
     "start_time": "2025-03-30T12:21:52.220556",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "lEncoder = LabelEncoder()\n",
    "labels = lEncoder.fit(data_frame.activity)\n",
    "data_frame['act'] = lEncoder.transform(data_frame.activity)\n",
    "data_frame.drop('activity', axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "c36e5e4c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:52.666800Z",
     "iopub.status.busy": "2025-03-30T12:21:52.666299Z",
     "iopub.status.idle": "2025-03-30T12:21:52.688098Z",
     "shell.execute_reply": "2025-03-30T12:21:52.687008Z"
    },
    "papermill": {
     "duration": 0.03742,
     "end_time": "2025-03-30T12:21:52.690148",
     "exception": false,
     "start_time": "2025-03-30T12:21:52.652728",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>person_id</th>\n",
       "      <th>trial_id</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>attitude.roll</th>\n",
       "      <th>attitude.pitch</th>\n",
       "      <th>attitude.yaw</th>\n",
       "      <th>gravity.x</th>\n",
       "      <th>gravity.y</th>\n",
       "      <th>gravity.z</th>\n",
       "      <th>rotationRate.x</th>\n",
       "      <th>rotationRate.y</th>\n",
       "      <th>rotationRate.z</th>\n",
       "      <th>userAcceleration.x</th>\n",
       "      <th>userAcceleration.y</th>\n",
       "      <th>userAcceleration.z</th>\n",
       "      <th>act</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>96</td>\n",
       "      <td>1.044129</td>\n",
       "      <td>-1.364544</td>\n",
       "      <td>-0.762006</td>\n",
       "      <td>0.177020</td>\n",
       "      <td>0.978805</td>\n",
       "      <td>-0.102928</td>\n",
       "      <td>-0.055552</td>\n",
       "      <td>0.296486</td>\n",
       "      <td>-0.517680</td>\n",
       "      <td>0.277799</td>\n",
       "      <td>0.073975</td>\n",
       "      <td>-0.005989</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>96</td>\n",
       "      <td>1.033699</td>\n",
       "      <td>-1.374970</td>\n",
       "      <td>-0.777007</td>\n",
       "      <td>0.167157</td>\n",
       "      <td>0.980887</td>\n",
       "      <td>-0.099540</td>\n",
       "      <td>-0.160723</td>\n",
       "      <td>0.148822</td>\n",
       "      <td>-0.528907</td>\n",
       "      <td>0.209674</td>\n",
       "      <td>-0.051886</td>\n",
       "      <td>0.032646</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>96</td>\n",
       "      <td>1.020201</td>\n",
       "      <td>-1.385414</td>\n",
       "      <td>-0.792103</td>\n",
       "      <td>0.157058</td>\n",
       "      <td>0.982866</td>\n",
       "      <td>-0.096422</td>\n",
       "      <td>-0.125106</td>\n",
       "      <td>0.032462</td>\n",
       "      <td>-0.498599</td>\n",
       "      <td>0.164369</td>\n",
       "      <td>-0.157625</td>\n",
       "      <td>0.108598</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>96</td>\n",
       "      <td>0.991317</td>\n",
       "      <td>-1.392669</td>\n",
       "      <td>-0.820281</td>\n",
       "      <td>0.148236</td>\n",
       "      <td>0.984177</td>\n",
       "      <td>-0.097010</td>\n",
       "      <td>0.135182</td>\n",
       "      <td>-0.113719</td>\n",
       "      <td>-0.398317</td>\n",
       "      <td>0.138705</td>\n",
       "      <td>-0.194550</td>\n",
       "      <td>0.106623</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>172</td>\n",
       "      <td>96</td>\n",
       "      <td>0.938219</td>\n",
       "      <td>-1.393323</td>\n",
       "      <td>-0.871891</td>\n",
       "      <td>0.142361</td>\n",
       "      <td>0.984293</td>\n",
       "      <td>-0.104360</td>\n",
       "      <td>0.475710</td>\n",
       "      <td>-0.107196</td>\n",
       "      <td>-0.194053</td>\n",
       "      <td>0.141697</td>\n",
       "      <td>-0.141046</td>\n",
       "      <td>0.052633</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412860</th>\n",
       "      <td>6859</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>175</td>\n",
       "      <td>62</td>\n",
       "      <td>-0.023793</td>\n",
       "      <td>-0.999631</td>\n",
       "      <td>-0.784959</td>\n",
       "      <td>-0.012861</td>\n",
       "      <td>0.841271</td>\n",
       "      <td>-0.540444</td>\n",
       "      <td>0.047839</td>\n",
       "      <td>-0.205053</td>\n",
       "      <td>-0.354167</td>\n",
       "      <td>0.114348</td>\n",
       "      <td>0.727546</td>\n",
       "      <td>0.388558</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412861</th>\n",
       "      <td>6860</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>175</td>\n",
       "      <td>62</td>\n",
       "      <td>-0.043543</td>\n",
       "      <td>-1.004392</td>\n",
       "      <td>-0.804742</td>\n",
       "      <td>-0.023357</td>\n",
       "      <td>0.843836</td>\n",
       "      <td>-0.536076</td>\n",
       "      <td>-0.498880</td>\n",
       "      <td>0.069946</td>\n",
       "      <td>-0.452342</td>\n",
       "      <td>-0.366063</td>\n",
       "      <td>0.680807</td>\n",
       "      <td>0.583729</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412862</th>\n",
       "      <td>6861</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>175</td>\n",
       "      <td>62</td>\n",
       "      <td>-0.040952</td>\n",
       "      <td>-1.016429</td>\n",
       "      <td>-0.808555</td>\n",
       "      <td>-0.021550</td>\n",
       "      <td>0.850234</td>\n",
       "      <td>-0.525946</td>\n",
       "      <td>-0.519771</td>\n",
       "      <td>0.242518</td>\n",
       "      <td>0.098493</td>\n",
       "      <td>-0.240245</td>\n",
       "      <td>0.207811</td>\n",
       "      <td>0.528601</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412863</th>\n",
       "      <td>6862</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>175</td>\n",
       "      <td>62</td>\n",
       "      <td>-0.034956</td>\n",
       "      <td>-1.023650</td>\n",
       "      <td>-0.799503</td>\n",
       "      <td>-0.018182</td>\n",
       "      <td>0.854013</td>\n",
       "      <td>-0.519916</td>\n",
       "      <td>-0.363679</td>\n",
       "      <td>-0.225310</td>\n",
       "      <td>0.272167</td>\n",
       "      <td>-0.199577</td>\n",
       "      <td>-0.125375</td>\n",
       "      <td>0.559192</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1412864</th>\n",
       "      <td>6863</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>175</td>\n",
       "      <td>62</td>\n",
       "      <td>-0.042453</td>\n",
       "      <td>-1.030629</td>\n",
       "      <td>-0.803795</td>\n",
       "      <td>-0.021826</td>\n",
       "      <td>0.857622</td>\n",
       "      <td>-0.513798</td>\n",
       "      <td>-0.222550</td>\n",
       "      <td>-0.083684</td>\n",
       "      <td>-0.367962</td>\n",
       "      <td>-0.109430</td>\n",
       "      <td>-0.021410</td>\n",
       "      <td>0.744221</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1412865 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Unnamed: 0  person_id  trial_id  age  gender  height  weight  \\\n",
       "0                0         16         1   29       0     172      96   \n",
       "1                1         16         1   29       0     172      96   \n",
       "2                2         16         1   29       0     172      96   \n",
       "3                3         16         1   29       0     172      96   \n",
       "4                4         16         1   29       0     172      96   \n",
       "...            ...        ...       ...  ...     ...     ...     ...   \n",
       "1412860       6859          7         7   30       0     175      62   \n",
       "1412861       6860          7         7   30       0     175      62   \n",
       "1412862       6861          7         7   30       0     175      62   \n",
       "1412863       6862          7         7   30       0     175      62   \n",
       "1412864       6863          7         7   30       0     175      62   \n",
       "\n",
       "         attitude.roll  attitude.pitch  attitude.yaw  gravity.x  gravity.y  \\\n",
       "0             1.044129       -1.364544     -0.762006   0.177020   0.978805   \n",
       "1             1.033699       -1.374970     -0.777007   0.167157   0.980887   \n",
       "2             1.020201       -1.385414     -0.792103   0.157058   0.982866   \n",
       "3             0.991317       -1.392669     -0.820281   0.148236   0.984177   \n",
       "4             0.938219       -1.393323     -0.871891   0.142361   0.984293   \n",
       "...                ...             ...           ...        ...        ...   \n",
       "1412860      -0.023793       -0.999631     -0.784959  -0.012861   0.841271   \n",
       "1412861      -0.043543       -1.004392     -0.804742  -0.023357   0.843836   \n",
       "1412862      -0.040952       -1.016429     -0.808555  -0.021550   0.850234   \n",
       "1412863      -0.034956       -1.023650     -0.799503  -0.018182   0.854013   \n",
       "1412864      -0.042453       -1.030629     -0.803795  -0.021826   0.857622   \n",
       "\n",
       "         gravity.z  rotationRate.x  rotationRate.y  rotationRate.z  \\\n",
       "0        -0.102928       -0.055552        0.296486       -0.517680   \n",
       "1        -0.099540       -0.160723        0.148822       -0.528907   \n",
       "2        -0.096422       -0.125106        0.032462       -0.498599   \n",
       "3        -0.097010        0.135182       -0.113719       -0.398317   \n",
       "4        -0.104360        0.475710       -0.107196       -0.194053   \n",
       "...            ...             ...             ...             ...   \n",
       "1412860  -0.540444        0.047839       -0.205053       -0.354167   \n",
       "1412861  -0.536076       -0.498880        0.069946       -0.452342   \n",
       "1412862  -0.525946       -0.519771        0.242518        0.098493   \n",
       "1412863  -0.519916       -0.363679       -0.225310        0.272167   \n",
       "1412864  -0.513798       -0.222550       -0.083684       -0.367962   \n",
       "\n",
       "         userAcceleration.x  userAcceleration.y  userAcceleration.z  act  \n",
       "0                  0.277799            0.073975           -0.005989    0  \n",
       "1                  0.209674           -0.051886            0.032646    0  \n",
       "2                  0.164369           -0.157625            0.108598    0  \n",
       "3                  0.138705           -0.194550            0.106623    0  \n",
       "4                  0.141697           -0.141046            0.052633    0  \n",
       "...                     ...                 ...                 ...  ...  \n",
       "1412860            0.114348            0.727546            0.388558    5  \n",
       "1412861           -0.366063            0.680807            0.583729    5  \n",
       "1412862           -0.240245            0.207811            0.528601    5  \n",
       "1412863           -0.199577           -0.125375            0.559192    5  \n",
       "1412864           -0.109430           -0.021410            0.744221    5  \n",
       "\n",
       "[1412865 rows x 20 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_frame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "54a4f21a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:52.717373Z",
     "iopub.status.busy": "2025-03-30T12:21:52.716997Z",
     "iopub.status.idle": "2025-03-30T12:21:52.993994Z",
     "shell.execute_reply": "2025-03-30T12:21:52.992851Z"
    },
    "papermill": {
     "duration": 0.292595,
     "end_time": "2025-03-30T12:21:52.995783",
     "exception": false,
     "start_time": "2025-03-30T12:21:52.703188",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='act', ylabel='count'>"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(data_frame, x='act')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "b1efc24a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:53.025781Z",
     "iopub.status.busy": "2025-03-30T12:21:53.025362Z",
     "iopub.status.idle": "2025-03-30T12:21:53.353979Z",
     "shell.execute_reply": "2025-03-30T12:21:53.352745Z"
    },
    "papermill": {
     "duration": 0.345187,
     "end_time": "2025-03-30T12:21:53.355967",
     "exception": false,
     "start_time": "2025-03-30T12:21:53.010780",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='trial_id', ylabel='count'>"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(data_frame, x='trial_id')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "cb9122c7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:53.385716Z",
     "iopub.status.busy": "2025-03-30T12:21:53.385297Z",
     "iopub.status.idle": "2025-03-30T12:21:53.964808Z",
     "shell.execute_reply": "2025-03-30T12:21:53.962446Z"
    },
    "papermill": {
     "duration": 0.596866,
     "end_time": "2025-03-30T12:21:53.967001",
     "exception": false,
     "start_time": "2025-03-30T12:21:53.370135",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='person_id', ylabel='count'>"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(data_frame, x='person_id')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb8cbfe5",
   "metadata": {
    "papermill": {
     "duration": 0.017855,
     "end_time": "2025-03-30T12:21:54.001986",
     "exception": false,
     "start_time": "2025-03-30T12:21:53.984131",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Debugging = set dataset to sammle data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "a5c07a3b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:54.038131Z",
     "iopub.status.busy": "2025-03-30T12:21:54.037626Z",
     "iopub.status.idle": "2025-03-30T12:21:54.108185Z",
     "shell.execute_reply": "2025-03-30T12:21:54.107176Z"
    },
    "papermill": {
     "duration": 0.088577,
     "end_time": "2025-03-30T12:21:54.110217",
     "exception": false,
     "start_time": "2025-03-30T12:21:54.021640",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = data_frame.sample(10000).copy()\n",
    "# df = data_frame.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "fbe5d1e6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:54.141348Z",
     "iopub.status.busy": "2025-03-30T12:21:54.141008Z",
     "iopub.status.idle": "2025-03-30T12:21:54.145544Z",
     "shell.execute_reply": "2025-03-30T12:21:54.144563Z"
    },
    "papermill": {
     "duration": 0.021877,
     "end_time": "2025-03-30T12:21:54.147102",
     "exception": false,
     "start_time": "2025-03-30T12:21:54.125225",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "input_features = ['attitude.roll',\n",
    "                  'attitude.pitch',\n",
    "                  'attitude.yaw',\n",
    "                  # 'gender',\n",
    "                  'age',\n",
    "                  'height',\n",
    "                  'weight',                  \n",
    "                  'gravity.x',\n",
    "                  'gravity.y',\n",
    "                  'gravity.z',\n",
    "                  'rotationRate.x',\n",
    "                  'rotationRate.y',\n",
    "                  'rotationRate.z',\n",
    "                  'userAcceleration.x',\n",
    "                  'userAcceleration.y',\n",
    "                  'userAcceleration.z']\n",
    "target_variable = ['act', 'gender'] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "038d405c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:21:54.179098Z",
     "iopub.status.busy": "2025-03-30T12:21:54.178665Z",
     "iopub.status.idle": "2025-03-30T12:22:42.802795Z",
     "shell.execute_reply": "2025-03-30T12:22:42.801513Z"
    },
    "papermill": {
     "duration": 48.642708,
     "end_time": "2025-03-30T12:22:42.805025",
     "exception": false,
     "start_time": "2025-03-30T12:21:54.162317",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "cpu\n",
      "Epoch 1 | Train Loss: 1.7684\n",
      "Epoch 2 | Train Loss: 1.3975\n",
      "Epoch 3 | Train Loss: 1.3957\n",
      "Epoch 4 | Train Loss: 1.3983\n",
      "Epoch 5 | Train Loss: 1.3959\n",
      "Test Loss: 1.4194\n"
     ]
    }
   ],
   "source": [
    "seq_len = 64 # use 28.5G memory - max available !!!\n",
    "epoch_number = 5\n",
    "batch_size = 64 # 32\n",
    "num_layers = 4 # 1\n",
    "test_size = 0.2\n",
    "hidden_size = 64 # 32\n",
    "output_size = len(target_variable)\n",
    "input_size = len(input_features)\n",
    "\n",
    "\n",
    "scaler = StandardScaler()\n",
    "X_scaled = scaler.fit_transform(df[input_features])\n",
    "y = df[target_variable].values\n",
    "\n",
    "\n",
    "\n",
    "# Build sequences BEFORE splitting\n",
    "X_seq = []\n",
    "y_seq = []\n",
    "\n",
    "for i in range(len(df) - seq_len):\n",
    "    X_seq.append(X_scaled[i:i+seq_len])\n",
    "    y_seq.append(y[i+seq_len])\n",
    "\n",
    "X_seq = np.array(X_seq)   # shape: (samples, seq_len, features)\n",
    "y_seq = np.array(y_seq)   # shape: (samples,)\n",
    "\n",
    "# Train / Test Split correctly on sequences\n",
    "X_train, X_test, y_train, y_test = train_test_split(X_seq, y_seq, test_size=test_size, shuffle=False)\n",
    "\n",
    "# Convert to torch tensors\n",
    "train_dataset = torch.utils.data.TensorDataset(torch.FloatTensor(X_train), torch.FloatTensor(y_train))\n",
    "test_dataset = torch.utils.data.TensorDataset(torch.FloatTensor(X_test), torch.FloatTensor(y_test))\n",
    "\n",
    "train_loader = DataLoader(train_dataset, batch_size=batch_size, shuffle=True)\n",
    "test_loader = DataLoader(test_dataset, batch_size=batch_size, shuffle=False)\n",
    "\n",
    "\n",
    "# ------------------------------\n",
    "# 4. LSTM Model\n",
    "# ------------------------------\n",
    "class LSTMModel(nn.Module):\n",
    "    def __init__(self, input_size, hidden_size, num_layers=num_layers):\n",
    "        super(LSTMModel, self).__init__()\n",
    "        self.lstm = nn.LSTM(input_size, hidden_size, num_layers, batch_first=True)\n",
    "        self.fc = nn.Linear(hidden_size, output_size)\n",
    "\n",
    "    def forward(self, x):\n",
    "        _, (hn, _) = self.lstm(x)\n",
    "        out = self.fc(hn[-1])\n",
    "        return out.squeeze()\n",
    "        \n",
    "model = LSTMModel(input_size=input_size, hidden_size=hidden_size)\n",
    "\n",
    "\n",
    "# ------------------------------\n",
    "# 5. Training\n",
    "# ------------------------------\n",
    "device = 'cuda' if torch.cuda.is_available() else 'cpu'\n",
    "model.to(device)\n",
    "print(device)\n",
    "\n",
    "optimizer = torch.optim.Adam(model.parameters(), lr=0.001)\n",
    "criterion = nn.MSELoss()\n",
    "\n",
    "for epoch in range(epoch_number):\n",
    "    model.train()\n",
    "    total_loss = 0\n",
    "    for X_batch, y_batch in train_loader:\n",
    "        X_batch, y_batch = X_batch.to(device), y_batch.to(device)\n",
    "        \n",
    "        optimizer.zero_grad()\n",
    "        output = model(X_batch)\n",
    "        loss = criterion(output, y_batch)\n",
    "        loss.backward()\n",
    "        optimizer.step()\n",
    "        \n",
    "        total_loss += loss.item()\n",
    "    print(f\"Epoch {epoch+1} | Train Loss: {total_loss / len(train_loader):.4f}\")\n",
    "\n",
    "\n",
    "# ------------------------------\n",
    "# 6. Evaluation\n",
    "# ------------------------------\n",
    "predictions = []\n",
    "ground_truth = []\n",
    "model.eval()\n",
    "with torch.no_grad():\n",
    "    total_loss = 0\n",
    "    for X_batch, y_batch in test_loader:\n",
    "        X_batch, y_batch = X_batch.to(device), y_batch.to(device)\n",
    "        output = model(X_batch)\n",
    "        loss = criterion(output, y_batch)\n",
    "        total_loss += loss.item()\n",
    "        predictions.append(output.cpu().numpy())\n",
    "        ground_truth.append(y_batch.cpu().numpy())\n",
    "    print(f\"Test Loss: {total_loss / len(test_loader):.4f}\")\n",
    "\n",
    "predictions = np.concatenate(predictions)\n",
    "ground_truth = np.concatenate(ground_truth)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "d7c0158f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:22:42.837125Z",
     "iopub.status.busy": "2025-03-30T12:22:42.836546Z",
     "iopub.status.idle": "2025-03-30T12:22:42.842922Z",
     "shell.execute_reply": "2025-03-30T12:22:42.841862Z"
    },
    "papermill": {
     "duration": 0.024004,
     "end_time": "2025-03-30T12:22:42.844468",
     "exception": false,
     "start_time": "2025-03-30T12:22:42.820464",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LSTMModel(\n",
       "  (lstm): LSTM(15, 64, num_layers=4, batch_first=True)\n",
       "  (fc): Linear(in_features=64, out_features=2, bias=True)\n",
       ")"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "95223f3b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:22:42.877103Z",
     "iopub.status.busy": "2025-03-30T12:22:42.876766Z",
     "iopub.status.idle": "2025-03-30T12:22:42.883113Z",
     "shell.execute_reply": "2025-03-30T12:22:42.881545Z"
    },
    "papermill": {
     "duration": 0.02426,
     "end_time": "2025-03-30T12:22:42.884976",
     "exception": false,
     "start_time": "2025-03-30T12:22:42.860716",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1988, 2)"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ground_truth.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "43c2792e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:22:42.917341Z",
     "iopub.status.busy": "2025-03-30T12:22:42.917009Z",
     "iopub.status.idle": "2025-03-30T12:22:42.922740Z",
     "shell.execute_reply": "2025-03-30T12:22:42.921834Z"
    },
    "papermill": {
     "duration": 0.02392,
     "end_time": "2025-03-30T12:22:42.924504",
     "exception": false,
     "start_time": "2025-03-30T12:22:42.900584",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1988, 2)"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predictions.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "cde13582",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:22:42.957426Z",
     "iopub.status.busy": "2025-03-30T12:22:42.957062Z",
     "iopub.status.idle": "2025-03-30T12:22:43.416149Z",
     "shell.execute_reply": "2025-03-30T12:22:43.415041Z"
    },
    "papermill": {
     "duration": 0.478166,
     "end_time": "2025-03-30T12:22:43.418812",
     "exception": false,
     "start_time": "2025-03-30T12:22:42.940646",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# ------------------------------\n",
    "# Plot\n",
    "# ------------------------------\n",
    "\n",
    "# Optional: align to real timestamps\n",
    "# test_start_idx = len(df) - len(y_seq)  # where the test split started\n",
    "# time_axis = df.index[test_start_idx + seq_len:][len(y_train):]  # align with test set\n",
    "\n",
    "plt.figure(figsize=(12, 6))\n",
    "plt.plot(ground_truth, label='Actual')\n",
    "plt.plot(predictions, label='Predicted')\n",
    "plt.xlabel('Time')\n",
    "plt.ylabel('Target Value')\n",
    "plt.title('Time Series Prediction')\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "b2da286a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-30T12:22:43.457826Z",
     "iopub.status.busy": "2025-03-30T12:22:43.457318Z",
     "iopub.status.idle": "2025-03-30T12:22:43.756768Z",
     "shell.execute_reply": "2025-03-30T12:22:43.755651Z"
    },
    "papermill": {
     "duration": 0.320766,
     "end_time": "2025-03-30T12:22:43.758562",
     "exception": false,
     "start_time": "2025-03-30T12:22:43.437796",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n",
       "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n",
       " \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n",
       "<!-- Generated by graphviz version 2.43.0 (0)\n",
       " -->\n",
       "<!-- Title: %3 Pages: 1 -->\n",
       "<svg width=\"457pt\" height=\"678pt\"\n",
       " viewBox=\"0.00 0.00 457.00 678.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n",
       "<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 674)\">\n",
       "<title>%3</title>\n",
       "<polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-674 453,-674 453,4 -4,4\"/>\n",
       "<!-- 133768432975936 -->\n",
       "<g id=\"node1\" class=\"node\">\n",
       "<title>133768432975936</title>\n",
       "<polygon fill=\"#caff70\" stroke=\"black\" points=\"134,-31 69,-31 69,0 134,0 134,-31\"/>\n",
       "<text text-anchor=\"middle\" x=\"101.5\" y=\"-7\" font-family=\"monospace\" font-size=\"10.00\"> (1, 64)</text>\n",
       "</g>\n",
       "<!-- 133768505038720 -->\n",
       "<g id=\"node2\" class=\"node\">\n",
       "<title>133768505038720</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"146,-86 57,-86 57,-67 146,-67 146,-86\"/>\n",
       "<text text-anchor=\"middle\" x=\"101.5\" y=\"-74\" font-family=\"monospace\" font-size=\"10.00\">MulBackward0</text>\n",
       "</g>\n",
       "<!-- 133768505038720&#45;&gt;133768432975936 -->\n",
       "<g id=\"edge26\" class=\"edge\">\n",
       "<title>133768505038720&#45;&gt;133768432975936</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M101.5,-66.79C101.5,-60.07 101.5,-50.4 101.5,-41.34\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"105,-41.19 101.5,-31.19 98,-41.19 105,-41.19\"/>\n",
       "</g>\n",
       "<!-- 133768505041936 -->\n",
       "<g id=\"node3\" class=\"node\">\n",
       "<title>133768505041936</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"120,-208 7,-208 7,-189 120,-189 120,-208\"/>\n",
       "<text text-anchor=\"middle\" x=\"63.5\" y=\"-196\" font-family=\"monospace\" font-size=\"10.00\">SigmoidBackward0</text>\n",
       "</g>\n",
       "<!-- 133768505041936&#45;&gt;133768505038720 -->\n",
       "<g id=\"edge1\" class=\"edge\">\n",
       "<title>133768505041936&#45;&gt;133768505038720</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M65.18,-189C68.08,-174.88 74.47,-145.82 82.5,-122 85.52,-113.04 89.55,-103.37 93.13,-95.33\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"96.32,-96.76 97.3,-86.21 89.96,-93.85 96.32,-96.76\"/>\n",
       "</g>\n",
       "<!-- 133768505038672 -->\n",
       "<g id=\"node4\" class=\"node\">\n",
       "<title>133768505038672</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"282,-373 145,-373 145,-354 282,-354 282,-373\"/>\n",
       "<text text-anchor=\"middle\" x=\"213.5\" y=\"-361\" font-family=\"monospace\" font-size=\"10.00\">UnsafeSplitBackward0</text>\n",
       "</g>\n",
       "<!-- 133768505038672&#45;&gt;133768505041936 -->\n",
       "<g id=\"edge2\" class=\"edge\">\n",
       "<title>133768505038672&#45;&gt;133768505041936</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M145.82,-353.98C122.55,-347.69 98.38,-336.81 82.5,-318 58.72,-289.84 58.73,-244.01 61.01,-218.38\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"64.52,-218.49 62.14,-208.16 57.56,-217.72 64.52,-218.49\"/>\n",
       "</g>\n",
       "<!-- 133768505042512 -->\n",
       "<g id=\"node21\" class=\"node\">\n",
       "<title>133768505042512</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"205,-318 92,-318 92,-299 205,-299 205,-318\"/>\n",
       "<text text-anchor=\"middle\" x=\"148.5\" y=\"-306\" font-family=\"monospace\" font-size=\"10.00\">SigmoidBackward0</text>\n",
       "</g>\n",
       "<!-- 133768505038672&#45;&gt;133768505042512 -->\n",
       "<g id=\"edge20\" class=\"edge\">\n",
       "<title>133768505038672&#45;&gt;133768505042512</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M203.06,-353.98C193.35,-346.07 178.68,-334.11 167,-324.58\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"169.1,-321.78 159.13,-318.17 164.67,-327.2 169.1,-321.78\"/>\n",
       "</g>\n",
       "<!-- 133768505036992 -->\n",
       "<g id=\"node23\" class=\"node\">\n",
       "<title>133768505036992</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"336,-318 223,-318 223,-299 336,-299 336,-318\"/>\n",
       "<text text-anchor=\"middle\" x=\"279.5\" y=\"-306\" font-family=\"monospace\" font-size=\"10.00\">SigmoidBackward0</text>\n",
       "</g>\n",
       "<!-- 133768505038672&#45;&gt;133768505036992 -->\n",
       "<g id=\"edge23\" class=\"edge\">\n",
       "<title>133768505038672&#45;&gt;133768505036992</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M224.1,-353.98C233.96,-346.07 248.85,-334.11 260.72,-324.58\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"263.1,-327.16 268.7,-318.17 258.71,-321.7 263.1,-327.16\"/>\n",
       "</g>\n",
       "<!-- 133768505045008 -->\n",
       "<g id=\"node24\" class=\"node\">\n",
       "<title>133768505045008</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"449,-318 354,-318 354,-299 449,-299 449,-318\"/>\n",
       "<text text-anchor=\"middle\" x=\"401.5\" y=\"-306\" font-family=\"monospace\" font-size=\"10.00\">TanhBackward0</text>\n",
       "</g>\n",
       "<!-- 133768505038672&#45;&gt;133768505045008 -->\n",
       "<g id=\"edge25\" class=\"edge\">\n",
       "<title>133768505038672&#45;&gt;133768505045008</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M243.71,-353.98C275.54,-345.01 325.86,-330.82 361.1,-320.89\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"362.38,-324.16 371.06,-318.08 360.48,-317.43 362.38,-324.16\"/>\n",
       "</g>\n",
       "<!-- 133768505041744 -->\n",
       "<g id=\"node5\" class=\"node\">\n",
       "<title>133768505041744</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"258,-428 169,-428 169,-409 258,-409 258,-428\"/>\n",
       "<text text-anchor=\"middle\" x=\"213.5\" y=\"-416\" font-family=\"monospace\" font-size=\"10.00\">AddBackward0</text>\n",
       "</g>\n",
       "<!-- 133768505041744&#45;&gt;133768505038672 -->\n",
       "<g id=\"edge3\" class=\"edge\">\n",
       "<title>133768505041744&#45;&gt;133768505038672</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M213.5,-408.75C213.5,-401.8 213.5,-391.85 213.5,-383.13\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"217,-383.09 213.5,-373.09 210,-383.09 217,-383.09\"/>\n",
       "</g>\n",
       "<!-- 133768505038576 -->\n",
       "<g id=\"node6\" class=\"node\">\n",
       "<title>133768505038576</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"205,-483 104,-483 104,-464 205,-464 205,-483\"/>\n",
       "<text text-anchor=\"middle\" x=\"154.5\" y=\"-471\" font-family=\"monospace\" font-size=\"10.00\">AddmmBackward0</text>\n",
       "</g>\n",
       "<!-- 133768505038576&#45;&gt;133768505041744 -->\n",
       "<g id=\"edge4\" class=\"edge\">\n",
       "<title>133768505038576&#45;&gt;133768505041744</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M163.98,-463.98C172.7,-456.15 185.84,-444.34 196.4,-434.86\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"198.75,-437.46 203.85,-428.17 194.07,-432.25 198.75,-437.46\"/>\n",
       "</g>\n",
       "<!-- 133768505046640 -->\n",
       "<g id=\"node7\" class=\"node\">\n",
       "<title>133768505046640</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"101,-538 0,-538 0,-519 101,-519 101,-538\"/>\n",
       "<text text-anchor=\"middle\" x=\"50.5\" y=\"-526\" font-family=\"monospace\" font-size=\"10.00\">AccumulateGrad</text>\n",
       "</g>\n",
       "<!-- 133768505046640&#45;&gt;133768505038576 -->\n",
       "<g id=\"edge5\" class=\"edge\">\n",
       "<title>133768505046640&#45;&gt;133768505038576</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M67.21,-518.98C83.71,-510.57 109.2,-497.59 128.38,-487.81\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"130.17,-490.83 137.49,-483.17 126.99,-484.59 130.17,-490.83\"/>\n",
       "</g>\n",
       "<!-- 133771722456928 -->\n",
       "<g id=\"node8\" class=\"node\">\n",
       "<title>133771722456928</title>\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"80,-604 21,-604 21,-574 80,-574 80,-604\"/>\n",
       "<text text-anchor=\"middle\" x=\"50.5\" y=\"-592\" font-family=\"monospace\" font-size=\"10.00\">bias_hh</text>\n",
       "<text text-anchor=\"middle\" x=\"50.5\" y=\"-581\" font-family=\"monospace\" font-size=\"10.00\"> (256)</text>\n",
       "</g>\n",
       "<!-- 133771722456928&#45;&gt;133768505046640 -->\n",
       "<g id=\"edge6\" class=\"edge\">\n",
       "<title>133771722456928&#45;&gt;133768505046640</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M50.5,-573.84C50.5,-566.21 50.5,-556.7 50.5,-548.45\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"54,-548.27 50.5,-538.27 47,-548.27 54,-548.27\"/>\n",
       "</g>\n",
       "<!-- 133768505038432 -->\n",
       "<g id=\"node9\" class=\"node\">\n",
       "<title>133768505038432</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"196,-538 119,-538 119,-519 196,-519 196,-538\"/>\n",
       "<text text-anchor=\"middle\" x=\"157.5\" y=\"-526\" font-family=\"monospace\" font-size=\"10.00\">TBackward0</text>\n",
       "</g>\n",
       "<!-- 133768505038432&#45;&gt;133768505038576 -->\n",
       "<g id=\"edge7\" class=\"edge\">\n",
       "<title>133768505038432&#45;&gt;133768505038576</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M157,-518.75C156.61,-511.8 156.05,-501.85 155.55,-493.13\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"159.05,-492.88 154.99,-483.09 152.06,-493.27 159.05,-492.88\"/>\n",
       "</g>\n",
       "<!-- 133768505037280 -->\n",
       "<g id=\"node10\" class=\"node\">\n",
       "<title>133768505037280</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"208,-598.5 107,-598.5 107,-579.5 208,-579.5 208,-598.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"157.5\" y=\"-586.5\" font-family=\"monospace\" font-size=\"10.00\">AccumulateGrad</text>\n",
       "</g>\n",
       "<!-- 133768505037280&#45;&gt;133768505038432 -->\n",
       "<g id=\"edge8\" class=\"edge\">\n",
       "<title>133768505037280&#45;&gt;133768505038432</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M157.5,-579.37C157.5,-571.25 157.5,-558.81 157.5,-548.39\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"161,-548.17 157.5,-538.17 154,-548.17 161,-548.17\"/>\n",
       "</g>\n",
       "<!-- 133768540525952 -->\n",
       "<g id=\"node11\" class=\"node\">\n",
       "<title>133768540525952</title>\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"196,-670 119,-670 119,-640 196,-640 196,-670\"/>\n",
       "<text text-anchor=\"middle\" x=\"157.5\" y=\"-658\" font-family=\"monospace\" font-size=\"10.00\">weight_hh</text>\n",
       "<text text-anchor=\"middle\" x=\"157.5\" y=\"-647\" font-family=\"monospace\" font-size=\"10.00\"> (256, 64)</text>\n",
       "</g>\n",
       "<!-- 133768540525952&#45;&gt;133768505037280 -->\n",
       "<g id=\"edge9\" class=\"edge\">\n",
       "<title>133768540525952&#45;&gt;133768505037280</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M157.5,-639.8C157.5,-630.7 157.5,-618.79 157.5,-608.9\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"161,-608.84 157.5,-598.84 154,-608.84 161,-608.84\"/>\n",
       "</g>\n",
       "<!-- 133768505038624 -->\n",
       "<g id=\"node12\" class=\"node\">\n",
       "<title>133768505038624</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"324,-483 223,-483 223,-464 324,-464 324,-483\"/>\n",
       "<text text-anchor=\"middle\" x=\"273.5\" y=\"-471\" font-family=\"monospace\" font-size=\"10.00\">AddmmBackward0</text>\n",
       "</g>\n",
       "<!-- 133768505038624&#45;&gt;133768505041744 -->\n",
       "<g id=\"edge10\" class=\"edge\">\n",
       "<title>133768505038624&#45;&gt;133768505041744</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M263.86,-463.98C254.99,-456.15 241.63,-444.34 230.89,-434.86\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"233.13,-432.17 223.32,-428.17 228.49,-437.41 233.13,-432.17\"/>\n",
       "</g>\n",
       "<!-- 133768505048416 -->\n",
       "<g id=\"node13\" class=\"node\">\n",
       "<title>133768505048416</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"321,-538 220,-538 220,-519 321,-519 321,-538\"/>\n",
       "<text text-anchor=\"middle\" x=\"270.5\" y=\"-526\" font-family=\"monospace\" font-size=\"10.00\">AccumulateGrad</text>\n",
       "</g>\n",
       "<!-- 133768505048416&#45;&gt;133768505038624 -->\n",
       "<g id=\"edge11\" class=\"edge\">\n",
       "<title>133768505048416&#45;&gt;133768505038624</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M271,-518.75C271.39,-511.8 271.95,-501.85 272.45,-493.13\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"275.94,-493.27 273.01,-483.09 268.95,-492.88 275.94,-493.27\"/>\n",
       "</g>\n",
       "<!-- 133771722449248 -->\n",
       "<g id=\"node14\" class=\"node\">\n",
       "<title>133771722449248</title>\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"300,-604 241,-604 241,-574 300,-574 300,-604\"/>\n",
       "<text text-anchor=\"middle\" x=\"270.5\" y=\"-592\" font-family=\"monospace\" font-size=\"10.00\">bias_ih</text>\n",
       "<text text-anchor=\"middle\" x=\"270.5\" y=\"-581\" font-family=\"monospace\" font-size=\"10.00\"> (256)</text>\n",
       "</g>\n",
       "<!-- 133771722449248&#45;&gt;133768505048416 -->\n",
       "<g id=\"edge12\" class=\"edge\">\n",
       "<title>133771722449248&#45;&gt;133768505048416</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M270.5,-573.84C270.5,-566.21 270.5,-556.7 270.5,-548.45\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"274,-548.27 270.5,-538.27 267,-548.27 274,-548.27\"/>\n",
       "</g>\n",
       "<!-- 133768505048320 -->\n",
       "<g id=\"node15\" class=\"node\">\n",
       "<title>133768505048320</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"416,-538 339,-538 339,-519 416,-519 416,-538\"/>\n",
       "<text text-anchor=\"middle\" x=\"377.5\" y=\"-526\" font-family=\"monospace\" font-size=\"10.00\">TBackward0</text>\n",
       "</g>\n",
       "<!-- 133768505048320&#45;&gt;133768505038624 -->\n",
       "<g id=\"edge13\" class=\"edge\">\n",
       "<title>133768505048320&#45;&gt;133768505038624</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M360.79,-518.98C344.29,-510.57 318.8,-497.59 299.62,-487.81\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"301.01,-484.59 290.51,-483.17 297.83,-490.83 301.01,-484.59\"/>\n",
       "</g>\n",
       "<!-- 133768505048368 -->\n",
       "<g id=\"node16\" class=\"node\">\n",
       "<title>133768505048368</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"428,-598.5 327,-598.5 327,-579.5 428,-579.5 428,-598.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"377.5\" y=\"-586.5\" font-family=\"monospace\" font-size=\"10.00\">AccumulateGrad</text>\n",
       "</g>\n",
       "<!-- 133768505048368&#45;&gt;133768505048320 -->\n",
       "<g id=\"edge14\" class=\"edge\">\n",
       "<title>133768505048368&#45;&gt;133768505048320</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M377.5,-579.37C377.5,-571.25 377.5,-558.81 377.5,-548.39\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"381,-548.17 377.5,-538.17 374,-548.17 381,-548.17\"/>\n",
       "</g>\n",
       "<!-- 133768564771712 -->\n",
       "<g id=\"node17\" class=\"node\">\n",
       "<title>133768564771712</title>\n",
       "<polygon fill=\"lightblue\" stroke=\"black\" points=\"416,-670 339,-670 339,-640 416,-640 416,-670\"/>\n",
       "<text text-anchor=\"middle\" x=\"377.5\" y=\"-658\" font-family=\"monospace\" font-size=\"10.00\">weight_ih</text>\n",
       "<text text-anchor=\"middle\" x=\"377.5\" y=\"-647\" font-family=\"monospace\" font-size=\"10.00\"> (256, 15)</text>\n",
       "</g>\n",
       "<!-- 133768564771712&#45;&gt;133768505048368 -->\n",
       "<g id=\"edge15\" class=\"edge\">\n",
       "<title>133768564771712&#45;&gt;133768505048368</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M377.5,-639.8C377.5,-630.7 377.5,-618.79 377.5,-608.9\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"381,-608.84 377.5,-598.84 374,-608.84 381,-608.84\"/>\n",
       "</g>\n",
       "<!-- 133768505048464 -->\n",
       "<g id=\"node18\" class=\"node\">\n",
       "<title>133768505048464</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"187,-147 92,-147 92,-128 187,-128 187,-147\"/>\n",
       "<text text-anchor=\"middle\" x=\"139.5\" y=\"-135\" font-family=\"monospace\" font-size=\"10.00\">TanhBackward0</text>\n",
       "</g>\n",
       "<!-- 133768505048464&#45;&gt;133768505038720 -->\n",
       "<g id=\"edge16\" class=\"edge\">\n",
       "<title>133768505048464&#45;&gt;133768505038720</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M133.89,-127.79C128.34,-119.17 119.67,-105.71 112.7,-94.89\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"115.49,-92.75 107.13,-86.24 109.6,-96.54 115.49,-92.75\"/>\n",
       "</g>\n",
       "<!-- 133768505041792 -->\n",
       "<g id=\"node19\" class=\"node\">\n",
       "<title>133768505041792</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"254,-208 165,-208 165,-189 254,-189 254,-208\"/>\n",
       "<text text-anchor=\"middle\" x=\"209.5\" y=\"-196\" font-family=\"monospace\" font-size=\"10.00\">AddBackward0</text>\n",
       "</g>\n",
       "<!-- 133768505041792&#45;&gt;133768505048464 -->\n",
       "<g id=\"edge17\" class=\"edge\">\n",
       "<title>133768505041792&#45;&gt;133768505048464</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M199.17,-188.79C188.31,-179.64 171.01,-165.06 157.83,-153.95\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"159.77,-151.01 149.87,-147.24 155.26,-156.36 159.77,-151.01\"/>\n",
       "</g>\n",
       "<!-- 133768432976016 -->\n",
       "<g id=\"node25\" class=\"node\">\n",
       "<title>133768432976016</title>\n",
       "<polygon fill=\"#caff70\" stroke=\"black\" points=\"270,-153 205,-153 205,-122 270,-122 270,-153\"/>\n",
       "<text text-anchor=\"middle\" x=\"237.5\" y=\"-129\" font-family=\"monospace\" font-size=\"10.00\"> (1, 64)</text>\n",
       "</g>\n",
       "<!-- 133768505041792&#45;&gt;133768432976016 -->\n",
       "<g id=\"edge27\" class=\"edge\">\n",
       "<title>133768505041792&#45;&gt;133768432976016</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M213.63,-188.79C216.93,-181.85 221.71,-171.77 226.13,-162.46\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"229.4,-163.73 230.53,-153.19 223.08,-160.73 229.4,-163.73\"/>\n",
       "</g>\n",
       "<!-- 133768505048272 -->\n",
       "<g id=\"node20\" class=\"node\">\n",
       "<title>133768505048272</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"205,-263 116,-263 116,-244 205,-244 205,-263\"/>\n",
       "<text text-anchor=\"middle\" x=\"160.5\" y=\"-251\" font-family=\"monospace\" font-size=\"10.00\">MulBackward0</text>\n",
       "</g>\n",
       "<!-- 133768505048272&#45;&gt;133768505041792 -->\n",
       "<g id=\"edge18\" class=\"edge\">\n",
       "<title>133768505048272&#45;&gt;133768505041792</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M168.59,-243.75C175.66,-236.11 186.09,-224.82 194.65,-215.56\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"197.34,-217.81 201.56,-208.09 192.2,-213.06 197.34,-217.81\"/>\n",
       "</g>\n",
       "<!-- 133768505042512&#45;&gt;133768505048272 -->\n",
       "<g id=\"edge19\" class=\"edge\">\n",
       "<title>133768505042512&#45;&gt;133768505048272</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M150.48,-298.75C152.07,-291.72 154.36,-281.62 156.35,-272.84\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"159.76,-273.62 158.56,-263.09 152.93,-272.07 159.76,-273.62\"/>\n",
       "</g>\n",
       "<!-- 133768505038480 -->\n",
       "<g id=\"node22\" class=\"node\">\n",
       "<title>133768505038480</title>\n",
       "<polygon fill=\"lightgrey\" stroke=\"black\" points=\"324,-263 235,-263 235,-244 324,-244 324,-263\"/>\n",
       "<text text-anchor=\"middle\" x=\"279.5\" y=\"-251\" font-family=\"monospace\" font-size=\"10.00\">MulBackward0</text>\n",
       "</g>\n",
       "<!-- 133768505038480&#45;&gt;133768505041792 -->\n",
       "<g id=\"edge21\" class=\"edge\">\n",
       "<title>133768505038480&#45;&gt;133768505041792</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M268.25,-243.98C257.7,-236 241.7,-223.88 229.06,-214.31\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"231.04,-211.42 220.95,-208.17 226.81,-217 231.04,-211.42\"/>\n",
       "</g>\n",
       "<!-- 133768505036992&#45;&gt;133768505038480 -->\n",
       "<g id=\"edge22\" class=\"edge\">\n",
       "<title>133768505036992&#45;&gt;133768505038480</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M279.5,-298.75C279.5,-291.8 279.5,-281.85 279.5,-273.13\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"283,-273.09 279.5,-263.09 276,-273.09 283,-273.09\"/>\n",
       "</g>\n",
       "<!-- 133768505045008&#45;&gt;133768505038480 -->\n",
       "<g id=\"edge24\" class=\"edge\">\n",
       "<title>133768505045008&#45;&gt;133768505038480</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M381.9,-298.98C362.18,-290.42 331.55,-277.11 308.92,-267.28\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"310.02,-263.94 299.46,-263.17 307.24,-270.37 310.02,-263.94\"/>\n",
       "</g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "<graphviz.graphs.Digraph at 0x79a96839a200>"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from torchviz import make_dot\n",
    "lstm_cell = nn.LSTMCell(input_size= input_size , hidden_size= hidden_size, bias=True)\n",
    "x = torch.randn(1, input_size)\n",
    "make_dot(lstm_cell(x), params=dict(list(lstm_cell.named_parameters())))"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 16752,
     "sourceId": 22073,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30918,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 100.649099,
   "end_time": "2025-03-30T12:22:46.862240",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-03-30T12:21:06.213141",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
